<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0412.1954                               -->
<workbook original-version='10.3' source-build='10.3.0 (10300.17.0412.1954)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='axis'>
      <format attr='tick-color' value='#f5f5f500' />
      <format attr='stroke-color' value='#f5f5f500' />
    </style-rule>
    <style-rule element='gridline'>
      <format attr='line-visibility' value='off' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
        <calculation class='tableau' formula='&quot;Trump&quot;' />
      </column>
      <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
        <calculation class='tableau' formula='&quot;Clinton&quot;' />
      </column>
    </datasource>
    <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' inline='true' name='federated.19ub8o602xy16y10tkeoe04nbicj' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Edited Jokes - Late Night Only' name='excel-direct.0qtdxum1v84opy1cjxdpn1kepkkn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/taylo/Desktop/Jokes Analysis/Edited Jokes - Late Night Only1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0qtdxum1v84opy1cjxdpn1kepkkn' name='Edited Jokes - Late Night Only' table='[&apos;Edited Jokes - Late Night Only$&apos;]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='2'>
            <column datatype='string' name='JOKE' ordinal='0' />
            <column datatype='integer' name='KEY' ordinal='1' />
            <column datatype='date' name='DATE' ordinal='2' />
            <column datatype='string' name='COMEDIAN' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>JOKE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOKE]</local-name>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias>JOKE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KEY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KEY]</local-name>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias>KEY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMEDIAN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COMEDIAN]</local-name>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias>COMEDIAN</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='.Column' datatype='integer' name='[.Row (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [COMEDIAN]&#13;&#10;    WHEN &quot;Bill Maher&quot; THEN 1&#13;&#10;    WHEN &quot;Conan O&apos;Brien&quot; THEN 2&#13;&#10;    WHEN &quot;Craig Ferguson&quot; THEN 3&#13;&#10;    WHEN &quot;Craig Kilborn&quot; THEN 4&#13;&#10;    WHEN &quot;David Letterman&quot; THEN 5&#13;&#10;    WHEN &quot;George Lopez&quot; THEN 6&#13;&#10;    WHEN &quot;James Corden&quot; THEN 7&#13;&#10;    WHEN &quot;Jay Leno&quot; THEN 1&#13;&#10;    WHEN &quot;Jimmy Fallon&quot; THEN 2&#13;&#10;    WHEN &quot;Jimmy Kimmel&quot; THEN 3&#13;&#10;    WHEN &quot;Larry Wilmore&quot; THEN 4&#13;&#10;    WHEN &quot;Seth Meyers&quot; THEN 5&#13;&#10;    WHEN &quot;Stephen Colbert&quot; THEN 6&#13;&#10;    WHEN &quot;Trevor Noah&quot; THEN 7&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[.strSearch1 (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_638103838452502539]=[Parameters].[Parameter 1] THEN [Number of Records] END' />
      </column>
      <column caption='.strSearch2' datatype='string' name='[.strSearch1 (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Search1 (copy)]' />
      </column>
      <column caption='.Both' datatype='integer' name='[.strSearch2 (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &quot;Both&quot;=[SearchCalc (copy)] THEN [Number of Records] END' />
      </column>
      <column datatype='integer' name='[.strSearch2 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [.strSearch1 (copy)]=[Parameters].[Search1 (copy)] THEN [Number of Records] END' />
      </column>
      <column caption='Comedian' datatype='string' name='[COMEDIAN]' role='dimension' type='nominal' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_638103838436413441]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(ATTR(YEAR([DATE])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calculation2' datatype='date' name='[Calculation_638103838436831234]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEADD(&apos;month&apos;,INDEX()-1,TOTAL(MIN(DATETRUNC(&apos;month&apos;,[DATE])))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
      </column>
      <column caption='.strSearch1' datatype='string' name='[Calculation_638103838452502539]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column aggregation='Sum' caption='.Row' datatype='integer' name='[Calculation_638103838456983570]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='CASE [COMEDIAN]&#13;&#10;    WHEN &quot;Bill Maher&quot; THEN 1&#13;&#10;    WHEN &quot;Conan O&apos;Brien&quot; THEN 1&#13;&#10;    WHEN &quot;Craig Ferguson&quot; THEN 1&#13;&#10;    WHEN &quot;Craig Kilborn&quot; THEN 1&#13;&#10;    WHEN &quot;David Letterman&quot; THEN 1&#13;&#10;    WHEN &quot;George Lopez&quot; THEN 1&#13;&#10;    WHEN &quot;James Corden&quot; THEN 1&#13;&#10;    WHEN &quot;Jay Leno&quot; THEN 2&#13;&#10;    WHEN &quot;Jimmy Fallon&quot; THEN 2&#13;&#10;    WHEN &quot;Jimmy Kimmel&quot; THEN 2&#13;&#10;    WHEN &quot;Larry Wilmore&quot; THEN 2&#13;&#10;    WHEN &quot;Seth Meyers&quot; THEN 2&#13;&#10;    WHEN &quot;Stephen Colbert&quot; THEN 2&#13;&#10;    WHEN &quot;Trevor Noah&quot; THEN 2&#13;&#10;END' />
      </column>
      <column caption='Calculation3' datatype='integer' name='[Calculation_638103838458626067]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [SearchCalc (copy)] = [Calculation_638103838452502539] THEN 1&#13;&#10;ELSEIF [SearchCalc (copy)] = [.strSearch1 (copy)] THEN 2&#13;&#10;ELSEIF [SearchCalc (copy)] = &quot;Both&quot; THEN 99&#13;&#10;END' />
      </column>
      <column caption='Search2Null' datatype='boolean' name='[Calculation_638103838493007903]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='ISNULL([Parameters].[Search1 (copy)])' />
      </column>
      <column caption='Running Sum' datatype='integer' name='[Calculation_638103838504788004]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(ZN(SUM([Number of Records])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='.MYstr' datatype='string' name='[Calculation_638103838508277798]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(DATEPART(&apos;month&apos;,[DATE])) + &quot;/&quot;+STR(DATEPART(&apos;year&apos;,[DATE]))' />
      </column>
      <column caption='# Records Connected' datatype='integer' name='[Calculation_982629209923059715]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(LOOKUP(SUM([Number of Records]),0))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Comedian (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[COMEDIAN]' new-bin='true'>
          <bin default-name='false' value='&quot;Conan O&apos;Brien&quot;'>
            <value>&quot;Conan O&apos;Brien&quot;</value>
            <value>&quot;Conan OBrian&quot;</value>
            <value>&quot;Conan OBrien&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Craig Kilborn&quot;'>
            <value>&quot;Craig Kilbon&quot;</value>
            <value>&quot;Craig Kilborn&quot;</value>
            <value>&quot;Craig Kilburn&quot;</value>
            <value>&quot;Craig Killborn&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;David Letterman&quot;'>
            <value>&quot;Dave Letterman&quot;</value>
            <value>&quot;David Leterman&quot;</value>
            <value>&quot;David Letterman&quot;</value>
            <value>&quot;David Letterman (Current Events segment)&quot;</value>
            <value>&quot;Davie Letterman&quot;</value>
            <value>&quot;Davis Letterman&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Jay Leno&quot;'>
            <value>&quot;Jay Leno&quot;</value>
            <value>&quot;Jay Leno;&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seth Meyers&quot;'>
            <value>&quot;Seth Meyers&quot;</value>
            <value>&quot;Seth Myers&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Date (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='DATE' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [DATE])*100 + DATEPART(&apos;month&apos;, [DATE]))' />
      </column>
      <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[KEY]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Search2Calc' datatype='boolean' name='[Search1Calc (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(LOWER([JOKE]),LOWER([Parameters].[Search1 (copy)]))' />
      </column>
      <column caption='SearchCalc w/ Both LABEL' datatype='string' name='[SearchCalc (copy) - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.19ub8o602xy16y10tkeoe04nbicj].[SearchCalc (copy)]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [SearchCalc (copy)], &quot; &quot;, -1 ) )' />
      </column>
      <column caption='SearchCalc w/ Both' datatype='string' name='[SearchCalc (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) AND CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN &quot;3. &quot;+&quot;Both&quot;&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN &quot;1. &quot;+[Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN &quot;2. &quot;+[.strSearch1 (copy)]&#13;&#10;END' />
      </column>
      <column caption='.SearchCalc w/ Both' datatype='string' name='[SearchCalc w/ Both (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_638103838493007903]=FALSE AND (CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) AND CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)]))) THEN &quot;3. &quot;+&quot;Both&quot;&#13;&#10;ELSEIF [Calculation_638103838493007903]=FALSE AND (CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539]))) THEN &quot;1. &quot;+[Calculation_638103838452502539]&#13;&#10;ELSEIF [Calculation_638103838493007903]=FALSE AND (CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)]))) THEN &quot;2. &quot;+[.strSearch1 (copy)]&#13;&#10;ELSEIF [Calculation_638103838493007903]=TRUE AND (CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539]))) THEN &quot;1. &quot;+[Calculation_638103838452502539]&#13;&#10;END' />
      </column>
      <column-instance column='[Number of Records]' derivation='Sum' name='[cum:sum:Number of Records:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[SearchCalc (copy) - Split 1]' derivation='None' name='[none:SearchCalc (copy) - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[SearchCalc (copy)]' derivation='None' name='[none:SearchCalc (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[pcrk:sum:Number of Records:ok:4]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Field' rank-options='Competition,Ascending' type='PctRank'>
          <order field='[federated.19ub8o602xy16y10tkeoe04nbicj].[SearchCalc (copy)]' />
          <order field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[DATE]' derivation='Quarter' name='[qr:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_638103838504788004]' derivation='User' name='[usr:Calculation_638103838504788004:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[win:sum:Number of Records:qk:17]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[win:sum:Number of Records:qk:19]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.19ub8o602xy16y10tkeoe04nbicj].[DATE]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[win:sum:Number of Records:qk:20]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.19ub8o602xy16y10tkeoe04nbicj].[DATE]' ordering-type='Field' to='1' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[win:sum:Number of Records:qk:21]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.19ub8o602xy16y10tkeoe04nbicj].[DATE]' ordering-type='Field' to='2' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[win:sum:Number of Records:qk:22]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-3' ordering-field='[federated.19ub8o602xy16y10tkeoe04nbicj].[DATE]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      <group caption='Action (.Column,Comedian,.Row,SearchCalc w/ Both)' hidden='true' name='[Action (.Column,Comedian,.Row,SearchCalc w/ Both)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[.Row (copy)]' />
          <groupfilter function='level-members' level='[COMEDIAN]' />
          <groupfilter function='level-members' level='[Calculation_638103838456983570]' />
          <groupfilter function='level-members' level='[SearchCalc (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (Comedian (group))' hidden='true' name='[Action (Comedian (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Comedian (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date)) 1' hidden='true' name='[Action (MONTH(Date)) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date),SearchCalc w/ Both)' hidden='true' name='[Action (MONTH(Date),SearchCalc w/ Both)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:DATE:ok]' />
          <groupfilter function='level-members' level='[SearchCalc (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (Search Term,MONTH(Date))' hidden='true' name='[Action (Search Term,MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_638103838439989253]' />
          <groupfilter function='level-members' level='[tmn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Search1Calc,MONTH(Date))' hidden='true' name='[Action (Search1Calc,MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_638103838439989253]' />
          <groupfilter function='level-members' level='[tmn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (SearchCalc,MONTH(Date))' hidden='true' name='[Action (SearchCalc,MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_638103838439989253]' />
          <groupfilter function='level-members' level='[tmn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (WEEK(Date),SearchCalc w/ Both LABEL,SearchCalc w/ Both)' hidden='true' name='[Action (WEEK(Date),SearchCalc w/ Both LABEL,SearchCalc w/ Both)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[twk:DATE:ok]' />
          <groupfilter function='level-members' level='[SearchCalc (copy) - Split 1]' />
          <groupfilter function='level-members' level='[SearchCalc (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date))' hidden='true' name='[Action (YEAR(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date),SearchCalc w/ Both LABEL,SearchCalc w/ Both)' hidden='true' name='[Action (YEAR(Date),MONTH(Date),SearchCalc w/ Both LABEL,SearchCalc w/ Both)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
          <groupfilter function='level-members' level='[SearchCalc (copy) - Split 1]' />
          <groupfilter function='level-members' level='[SearchCalc (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date),SearchCalc w/ Both)' hidden='true' name='[Action (YEAR(Date),MONTH(Date),SearchCalc w/ Both)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
          <groupfilter function='level-members' level='[SearchCalc (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date),WEEK(Date),SearchCalc w/ Both LABEL,SearchCalc w/ Both)' hidden='true' name='[Action (YEAR(Date),MONTH(Date),WEEK(Date),SearchCalc w/ Both LABEL,SearchCalc w/ Both)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
          <groupfilter function='level-members' level='[twk:DATE:ok]' />
          <groupfilter function='level-members' level='[SearchCalc (copy) - Split 1]' />
          <groupfilter function='level-members' level='[SearchCalc (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date),WEEK(Date),SearchCalc w/ Both)' hidden='true' name='[Action (YEAR(Date),MONTH(Date),WEEK(Date),SearchCalc w/ Both)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
          <groupfilter function='level-members' level='[twk:DATE:ok]' />
          <groupfilter function='level-members' level='[SearchCalc (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),QUARTER(Date),MONTH(Date))' hidden='true' name='[Action (YEAR(Date),QUARTER(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[qr:DATE:ok]' />
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.542751' measure-ordering='alphabetic' measure-percentage='0.332094' parameter-percentage='0.125155' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Comedian (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Jay Leno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bill Maher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darrell Hammond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Re-run&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jimmy Fallon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;David Letterman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Conan O&apos;Brien&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;George Lopez&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seth Meyers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stephen Colbert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jimmy Kimmel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;James Corden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Craig Ferguson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trevor Noah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Larry Wilmore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Craig Kilborn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838440562694:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[win:sum:Number of Records:qk:17]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[win:sum:Number of Records:qk:19]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[win:sum:Number of Records:qk:20]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[win:sum:Number of Records:qk:21]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[win:sum:Number of Records:qk:22]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838509973543:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838510096424:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838510198825:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838510260266:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838510301227:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838510350380:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838510542893:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838510678062:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838510731311:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[cum:sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838504788004:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SearchCalc (copy):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1. Clinton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1. Jay Leno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1. Obama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2. &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Obama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;|Clinton&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3. Both&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2. Alabama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2. Hillary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2. Osama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2. Trump&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Both&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Trump&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SearchCalc (copy) - Split 1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hillary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Both&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SearchCalc (copy):nk]&#10;[pcrk:sum:Number of Records:ok:4]' type='palette'>
            <map to='#24693d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>1.0</bucket>
              </multibucket>
            </map>
            <map to='#246a3d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.97142857142857142</bucket>
              </multibucket>
            </map>
            <map to='#246b3d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.96969696969696972</bucket>
              </multibucket>
            </map>
            <map to='#246c3d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.967741935483871</bucket>
              </multibucket>
            </map>
            <map to='#256d3d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.96666666666666667</bucket>
              </multibucket>
            </map>
            <map to='#256e3d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.96296296296296291</bucket>
              </multibucket>
            </map>
            <map to='#256f3d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.95833333333333337</bucket>
              </multibucket>
            </map>
            <map to='#25703d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.94285714285714284</bucket>
              </multibucket>
            </map>
            <map to='#26713d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.93939393939393945</bucket>
              </multibucket>
            </map>
            <map to='#26723d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.93333333333333335</bucket>
              </multibucket>
            </map>
            <map to='#26733d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.92592592592592593</bucket>
              </multibucket>
            </map>
            <map to='#26753d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.91666666666666663</bucket>
              </multibucket>
            </map>
            <map to='#27763d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.90909090909090906</bucket>
              </multibucket>
            </map>
            <map to='#27773d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.90476190476190477</bucket>
              </multibucket>
            </map>
            <map to='#28783e'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.90322580645161288</bucket>
              </multibucket>
            </map>
            <map to='#29793e'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.89473684210526316</bucket>
              </multibucket>
            </map>
            <map to='#297a3f'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.88888888888888884</bucket>
              </multibucket>
            </map>
            <map to='#2a5783'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>1.0</bucket>
              </multibucket>
            </map>
            <map to='#2a7b3f'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.88571428571428568</bucket>
              </multibucket>
            </map>
            <map to='#2b5884'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.97142857142857142</bucket>
              </multibucket>
            </map>
            <map to='#2b7c40'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.87878787878787878</bucket>
              </multibucket>
            </map>
            <map to='#2b7d40'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.875</bucket>
              </multibucket>
            </map>
            <map to='#2c5985'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.97058823529411764</bucket>
              </multibucket>
            </map>
            <map to='#2c7e41'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.87096774193548387</bucket>
              </multibucket>
            </map>
            <map to='#2d5a86'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.96969696969696972</bucket>
              </multibucket>
            </map>
            <map to='#2d7f41'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.8666666666666667</bucket>
              </multibucket>
            </map>
            <map to='#2d8042'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.85185185185185186</bucket>
              </multibucket>
            </map>
            <map to='#2e5b87'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.96875</bucket>
              </multibucket>
            </map>
            <map to='#2e8142'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.84848484848484851</bucket>
              </multibucket>
            </map>
            <map to='#2f5c89'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.967741935483871</bucket>
              </multibucket>
            </map>
            <map to='#2f8243'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.84210526315789469</bucket>
              </multibucket>
            </map>
            <map to='#305d8a'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.95833333333333337</bucket>
              </multibucket>
            </map>
            <map to='#308344'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.83333333333333337</bucket>
              </multibucket>
            </map>
            <map to='#315e8b'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.94736842105263153</bucket>
              </multibucket>
            </map>
            <map to='#328444'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.81818181818181823</bucket>
              </multibucket>
            </map>
            <map to='#33608c'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.94285714285714284</bucket>
              </multibucket>
            </map>
            <map to='#338545'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.81481481481481477</bucket>
              </multibucket>
            </map>
            <map to='#34618e'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.94117647058823528</bucket>
              </multibucket>
            </map>
            <map to='#35628f'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.93939393939393945</bucket>
              </multibucket>
            </map>
            <map to='#358646'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.80952380952380953</bucket>
              </multibucket>
            </map>
            <map to='#366390'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.9375</bucket>
              </multibucket>
            </map>
            <map to='#368747'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.80000000000000004</bucket>
              </multibucket>
            </map>
            <map to='#376491'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.93548387096774188</bucket>
              </multibucket>
            </map>
            <map to='#378848'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.79166666666666663</bucket>
              </multibucket>
            </map>
            <map to='#386592'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.93103448275862066</bucket>
              </multibucket>
            </map>
            <map to='#396693'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.91666666666666663</bucket>
              </multibucket>
            </map>
            <map to='#398949'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.78787878787878785</bucket>
              </multibucket>
            </map>
            <map to='#3a6795'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.91428571428571426</bucket>
              </multibucket>
            </map>
            <map to='#3a8a49'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.78125</bucket>
              </multibucket>
            </map>
            <map to='#3b6896'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.91176470588235292</bucket>
              </multibucket>
            </map>
            <map to='#3c6997'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.90909090909090906</bucket>
              </multibucket>
            </map>
            <map to='#3c8b4a'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.77777777777777779</bucket>
              </multibucket>
            </map>
            <map to='#3d6a98'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.90625</bucket>
              </multibucket>
            </map>
            <map to='#3d8c4b'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.77419354838709675</bucket>
              </multibucket>
            </map>
            <map to='#3e6c99'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.90322580645161288</bucket>
              </multibucket>
            </map>
            <map to='#3f6d9a'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.89655172413793105</bucket>
              </multibucket>
            </map>
            <map to='#3f8d4c'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.77142857142857146</bucket>
              </multibucket>
            </map>
            <map to='#406e9b'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.88235294117647056</bucket>
              </multibucket>
            </map>
            <map to='#408e4d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.76666666666666672</bucket>
              </multibucket>
            </map>
            <map to='#416f9d'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.87878787878787878</bucket>
              </multibucket>
            </map>
            <map to='#418f4d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.75757575757575757</bucket>
              </multibucket>
            </map>
            <map to='#42709e'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.875</bucket>
              </multibucket>
            </map>
            <map to='#42904d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.75</bucket>
              </multibucket>
            </map>
            <map to='#43719f'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.87096774193548387</bucket>
              </multibucket>
            </map>
            <map to='#4372a0'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.8571428571428571</bucket>
              </multibucket>
            </map>
            <map to='#43914e'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.74285714285714288</bucket>
              </multibucket>
            </map>
            <map to='#4473a1'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.8529411764705882</bucket>
              </multibucket>
            </map>
            <map to='#4574a2'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.84848484848484851</bucket>
              </multibucket>
            </map>
            <map to='#45924e'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.73333333333333328</bucket>
              </multibucket>
            </map>
            <map to='#4675a3'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.84375</bucket>
              </multibucket>
            </map>
            <map to='#46934e'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.72727272727272729</bucket>
              </multibucket>
            </map>
            <map to='#4777a5'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.83870967741935487</bucket>
              </multibucket>
            </map>
            <map to='#47944f'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.70967741935483875</bucket>
              </multibucket>
            </map>
            <map to='#4878a6'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.82857142857142863</bucket>
              </multibucket>
            </map>
            <map to='#48954f'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.70833333333333337</bucket>
              </multibucket>
            </map>
            <map to='#4979a7'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.82758620689655171</bucket>
              </multibucket>
            </map>
            <map to='#49964f'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.70370370370370372</bucket>
              </multibucket>
            </map>
            <map to='#4a7aa8'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.82352941176470584</bucket>
              </multibucket>
            </map>
            <map to='#4a7ba9'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.81818181818181823</bucket>
              </multibucket>
            </map>
            <map to='#4a9750'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.69696969696969702</bucket>
              </multibucket>
            </map>
            <map to='#4b7caa'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.8125</bucket>
              </multibucket>
            </map>
            <map to='#4c7dab'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.80952380952380953</bucket>
              </multibucket>
            </map>
            <map to='#4c9850'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.68965517241379315</bucket>
              </multibucket>
            </map>
            <map to='#4d9950'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.68571428571428572</bucket>
              </multibucket>
            </map>
            <map to='#4e7fac'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.80645161290322576</bucket>
              </multibucket>
            </map>
            <map to='#4e9a51'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.67741935483870963</bucket>
              </multibucket>
            </map>
            <map to='#4f80ad'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.80000000000000004</bucket>
              </multibucket>
            </map>
            <map to='#4f9b51'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.66666666666666663</bucket>
              </multibucket>
            </map>
            <map to='#5081ae'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.79411764705882348</bucket>
              </multibucket>
            </map>
            <map to='#5182af'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.7931034482758621</bucket>
              </multibucket>
            </map>
            <map to='#519c51'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.65625</bucket>
              </multibucket>
            </map>
            <map to='#5283b0'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.79166666666666663</bucket>
              </multibucket>
            </map>
            <map to='#529d51'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.6470588235294118</bucket>
              </multibucket>
            </map>
            <map to='#5384b1'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.78947368421052633</bucket>
              </multibucket>
            </map>
            <map to='#539e52'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.64516129032258063</bucket>
              </multibucket>
            </map>
            <map to='#5485b2'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.78125</bucket>
              </multibucket>
            </map>
            <map to='#559f52'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.63636363636363635</bucket>
              </multibucket>
            </map>
            <map to='#5687b3'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.77419354838709675</bucket>
              </multibucket>
            </map>
            <map to='#56a052'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.63157894736842102</bucket>
              </multibucket>
            </map>
            <map to='#5788b4'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.76470588235294112</bucket>
              </multibucket>
            </map>
            <map to='#57a152'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.62962962962962965</bucket>
              </multibucket>
            </map>
            <map to='#5889b5'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.75862068965517238</bucket>
              </multibucket>
            </map>
            <map to='#598ab6'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.75757575757575757</bucket>
              </multibucket>
            </map>
            <map to='#59a253'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.62857142857142856</bucket>
              </multibucket>
            </map>
            <map to='#5a8bb7'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.75</bucket>
              </multibucket>
            </map>
            <map to='#5aa353'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.625</bucket>
              </multibucket>
            </map>
            <map to='#5b8cb8'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.74285714285714288</bucket>
              </multibucket>
            </map>
            <map to='#5ba453'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.61904761904761907</bucket>
              </multibucket>
            </map>
            <map to='#5d8eb9'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.74193548387096775</bucket>
              </multibucket>
            </map>
            <map to='#5da553'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.61764705882352944</bucket>
              </multibucket>
            </map>
            <map to='#5e8fba'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.73529411764705888</bucket>
              </multibucket>
            </map>
            <map to='#5ea654'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.61290322580645162</bucket>
              </multibucket>
            </map>
            <map to='#5f90bb'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.73333333333333328</bucket>
              </multibucket>
            </map>
            <map to='#5fa755'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.60606060606060608</bucket>
              </multibucket>
            </map>
            <map to='#6091bc'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.71875</bucket>
              </multibucket>
            </map>
            <map to='#60a856'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.59999999999999998</bucket>
              </multibucket>
            </map>
            <map to='#61a957'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.59375</bucket>
              </multibucket>
            </map>
            <map to='#6293bd'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.7142857142857143</bucket>
              </multibucket>
            </map>
            <map to='#62aa58'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.59259259259259256</bucket>
              </multibucket>
            </map>
            <map to='#6394be'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.70967741935483875</bucket>
              </multibucket>
            </map>
            <map to='#63ab59'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.58823529411764708</bucket>
              </multibucket>
            </map>
            <map to='#6495bf'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.70588235294117652</bucket>
              </multibucket>
            </map>
            <map to='#64ac5a'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.58333333333333337</bucket>
              </multibucket>
            </map>
            <map to='#6596c0'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.69696969696969702</bucket>
              </multibucket>
            </map>
            <map to='#65ad5a'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.58064516129032262</bucket>
              </multibucket>
            </map>
            <map to='#66ae5b'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.5757575757575758</bucket>
              </multibucket>
            </map>
            <map to='#6798c1'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.68965517241379315</bucket>
              </multibucket>
            </map>
            <map to='#67af5c'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.5714285714285714</bucket>
              </multibucket>
            </map>
            <map to='#6899c1'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.6875</bucket>
              </multibucket>
            </map>
            <map to='#68b05d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.55882352941176472</bucket>
              </multibucket>
            </map>
            <map to='#699ac2'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.68571428571428572</bucket>
              </multibucket>
            </map>
            <map to='#69b15e'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.55172413793103448</bucket>
              </multibucket>
            </map>
            <map to='#6a9bc3'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.67741935483870963</bucket>
              </multibucket>
            </map>
            <map to='#6ab25f'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.54838709677419351</bucket>
              </multibucket>
            </map>
            <map to='#6b9cc4'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.67647058823529416</bucket>
              </multibucket>
            </map>
            <map to='#6bb360'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.54285714285714282</bucket>
              </multibucket>
            </map>
            <map to='#6d9ec5'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.66666666666666663</bucket>
              </multibucket>
            </map>
            <map to='#6db461'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.53125</bucket>
              </multibucket>
            </map>
            <map to='#6e9fc6'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.65714285714285714</bucket>
              </multibucket>
            </map>
            <map to='#6eb562'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.52941176470588236</bucket>
              </multibucket>
            </map>
            <map to='#6fa0c7'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.65625</bucket>
              </multibucket>
            </map>
            <map to='#6fb764'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.5161290322580645</bucket>
              </multibucket>
            </map>
            <map to='#70a1c8'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.64516129032258063</bucket>
              </multibucket>
            </map>
            <map to='#70b865'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.51515151515151514</bucket>
              </multibucket>
            </map>
            <map to='#71b966'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.51428571428571423</bucket>
              </multibucket>
            </map>
            <map to='#72a3c9'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.63636363636363635</bucket>
              </multibucket>
            </map>
            <map to='#72ba67'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.5</bucket>
              </multibucket>
            </map>
            <map to='#73a4ca'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.63157894736842102</bucket>
              </multibucket>
            </map>
            <map to='#74a5cb'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.625</bucket>
              </multibucket>
            </map>
            <map to='#74bb68'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.48571428571428571</bucket>
              </multibucket>
            </map>
            <map to='#75a6cc'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.62068965517241381</bucket>
              </multibucket>
            </map>
            <map to='#75bc69'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.47058823529411764</bucket>
              </multibucket>
            </map>
            <map to='#76a7cd'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.61904761904761907</bucket>
              </multibucket>
            </map>
            <map to='#76bd6a'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.46875</bucket>
              </multibucket>
            </map>
            <map to='#77be6b'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.45714285714285713</bucket>
              </multibucket>
            </map>
            <map to='#78a8ce'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.61290322580645162</bucket>
              </multibucket>
            </map>
            <map to='#78bf6c'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.45454545454545453</bucket>
              </multibucket>
            </map>
            <map to='#79aacf'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.59999999999999998</bucket>
              </multibucket>
            </map>
            <map to='#7aabd0'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.58620689655172409</bucket>
              </multibucket>
            </map>
            <map to='#7ac06d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.45161290322580644</bucket>
              </multibucket>
            </map>
            <map to='#7bacd1'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.58333333333333337</bucket>
              </multibucket>
            </map>
            <map to='#7bc16e'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.4375</bucket>
              </multibucket>
            </map>
            <map to='#7cc370'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.41935483870967744</bucket>
              </multibucket>
            </map>
            <map to='#7dadd2'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.5757575757575758</bucket>
              </multibucket>
            </map>
            <map to='#7dc471'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.41666666666666669</bucket>
              </multibucket>
            </map>
            <map to='#7eaed3'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.56666666666666665</bucket>
              </multibucket>
            </map>
            <map to='#7fafd4'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.55555555555555558</bucket>
              </multibucket>
            </map>
            <map to='#7fc572'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.41379310344827586</bucket>
              </multibucket>
            </map>
            <map to='#80b0d5'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.55172413793103448</bucket>
              </multibucket>
            </map>
            <map to='#80c673'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.40625</bucket>
              </multibucket>
            </map>
            <map to='#81c774'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.39393939393939392</bucket>
              </multibucket>
            </map>
            <map to='#82b2d6'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.54838709677419351</bucket>
              </multibucket>
            </map>
            <map to='#82c875'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.38709677419354838</bucket>
              </multibucket>
            </map>
            <map to='#83b3d7'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.54285714285714282</bucket>
              </multibucket>
            </map>
            <map to='#84b4d8'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.53333333333333333</bucket>
              </multibucket>
            </map>
            <map to='#84c976'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.37931034482758619</bucket>
              </multibucket>
            </map>
            <map to='#85ca77'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.375</bucket>
              </multibucket>
            </map>
            <map to='#86b5d8'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.5161290322580645</bucket>
              </multibucket>
            </map>
            <map to='#86cb78'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.36363636363636365</bucket>
              </multibucket>
            </map>
            <map to='#87b7d9'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.51515151515151514</bucket>
              </multibucket>
            </map>
            <map to='#88cc7a'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.35294117647058826</bucket>
              </multibucket>
            </map>
            <map to='#89b8da'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.5</bucket>
              </multibucket>
            </map>
            <map to='#89cd7b'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.34285714285714286</bucket>
              </multibucket>
            </map>
            <map to='#8ab9db'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.4838709677419355</bucket>
              </multibucket>
            </map>
            <map to='#8bce7c'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.33333333333333331</bucket>
              </multibucket>
            </map>
            <map to='#8cbbdc'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.46666666666666667</bucket>
              </multibucket>
            </map>
            <map to='#8ccf7d'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.32258064516129031</bucket>
              </multibucket>
            </map>
            <map to='#8dbcdd'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.45454545454545453</bucket>
              </multibucket>
            </map>
            <map to='#8ed07f'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.30303030303030304</bucket>
              </multibucket>
            </map>
            <map to='#8fbdde'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.45161290322580644</bucket>
              </multibucket>
            </map>
            <map to='#8fd180'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.29999999999999999</bucket>
              </multibucket>
            </map>
            <map to='#90bfdf'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.44444444444444442</bucket>
              </multibucket>
            </map>
            <map to='#91d281'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.29032258064516131</bucket>
              </multibucket>
            </map>
            <map to='#92c0df'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.41666666666666669</bucket>
              </multibucket>
            </map>
            <map to='#92d382'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.2857142857142857</bucket>
              </multibucket>
            </map>
            <map to='#93c1e0'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.39393939393939392</bucket>
              </multibucket>
            </map>
            <map to='#94d484'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.28125</bucket>
              </multibucket>
            </map>
            <map to='#95c2e1'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.375</bucket>
              </multibucket>
            </map>
            <map to='#95d585'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.26315789473684209</bucket>
              </multibucket>
            </map>
            <map to='#96c4e2'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.36666666666666664</bucket>
              </multibucket>
            </map>
            <map to='#97d586'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.25806451612903225</bucket>
              </multibucket>
            </map>
            <map to='#98c5e3'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.36363636363636365</bucket>
              </multibucket>
            </map>
            <map to='#98d687'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.25</bucket>
              </multibucket>
            </map>
            <map to='#9ac6e4'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.34285714285714286</bucket>
              </multibucket>
            </map>
            <map to='#9ad78a'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.21212121212121213</bucket>
              </multibucket>
            </map>
            <map to='#9bc7e4'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.32258064516129031</bucket>
              </multibucket>
            </map>
            <map to='#9dc9e5'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.31428571428571428</bucket>
              </multibucket>
            </map>
            <map to='#9dd88c'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.19354838709677419</bucket>
              </multibucket>
            </map>
            <map to='#9e3d22'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.96551724137931039</bucket>
              </multibucket>
            </map>
            <map to='#9ecae6'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.29999999999999999</bucket>
              </multibucket>
            </map>
            <map to='#9fd98f'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.1875</bucket>
              </multibucket>
            </map>
            <map to='#a03e22'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.91428571428571426</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe7'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.27272727272727271</bucket>
              </multibucket>
            </map>
            <map to='#a1cce7'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.26315789473684209</bucket>
              </multibucket>
            </map>
            <map to='#a1d991'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.16666666666666666</bucket>
              </multibucket>
            </map>
            <map to='#a23f22'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.82857142857142863</bucket>
              </multibucket>
            </map>
            <map to='#a3cee8'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.24242424242424243</bucket>
              </multibucket>
            </map>
            <map to='#a3da94'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.16129032258064516</bucket>
              </multibucket>
            </map>
            <map to='#a44022'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.7142857142857143</bucket>
              </multibucket>
            </map>
            <map to='#a5cfe9'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.21212121212121213</bucket>
              </multibucket>
            </map>
            <map to='#a5db96'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.12903225806451613</bucket>
              </multibucket>
            </map>
            <map to='#a64122'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.70833333333333337</bucket>
              </multibucket>
            </map>
            <map to='#a6d0ea'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.20833333333333334</bucket>
              </multibucket>
            </map>
            <map to='#a8d1ea'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.20000000000000001</bucket>
              </multibucket>
            </map>
            <map to='#a8dc99'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.10344827586206896</bucket>
              </multibucket>
            </map>
            <map to='#a94222'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.68571428571428572</bucket>
              </multibucket>
            </map>
            <map to='#aad2eb'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.18518518518518517</bucket>
              </multibucket>
            </map>
            <map to='#aadc9b'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.096774193548387094</bucket>
              </multibucket>
            </map>
            <map to='#ab4422'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.66666666666666663</bucket>
              </multibucket>
            </map>
            <map to='#abd3ec'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.18181818181818182</bucket>
              </multibucket>
            </map>
            <map to='#acdd9e'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.090909090909090912</bucket>
              </multibucket>
            </map>
            <map to='#ad4522'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.63636363636363635</bucket>
              </multibucket>
            </map>
            <map to='#add5ec'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.12121212121212122</bucket>
              </multibucket>
            </map>
            <map to='#aedea0'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.088235294117647065</bucket>
              </multibucket>
            </map>
            <map to='#af4623'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.61904761904761907</bucket>
              </multibucket>
            </map>
            <map to='#afd6ed'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.11428571428571428</bucket>
              </multibucket>
            </map>
            <map to='#b0d7ed'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.064516129032258063</bucket>
              </multibucket>
            </map>
            <map to='#b0dfa3'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>0.0</bucket>
              </multibucket>
            </map>
            <map to='#b24723'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.59999999999999998</bucket>
              </multibucket>
            </map>
            <map to='#b2d8ee'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.033333333333333333</bucket>
              </multibucket>
            </map>
            <map to='#b3e0a6'>
              <multibucket>
                <bucket>&quot;3. Both&quot;</bucket>
                <bucket>%null%</bucket>
              </multibucket>
            </map>
            <map to='#b44823'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.58333333333333337</bucket>
              </multibucket>
            </map>
            <map to='#b4d9ef'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.030303030303030304</bucket>
              </multibucket>
            </map>
            <map to='#b5daef'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.028571428571428571</bucket>
              </multibucket>
            </map>
            <map to='#b64a23'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.5714285714285714</bucket>
              </multibucket>
            </map>
            <map to='#b7dbf0'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>0.0</bucket>
              </multibucket>
            </map>
            <map to='#b84b23'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.5625</bucket>
              </multibucket>
            </map>
            <map to='#b9ddf1'>
              <multibucket>
                <bucket>&quot;1. Clinton&quot;</bucket>
                <bucket>%null%</bucket>
              </multibucket>
            </map>
            <map to='#bb4c23'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.55555555555555558</bucket>
              </multibucket>
            </map>
            <map to='#bd4d23'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.54545454545454541</bucket>
              </multibucket>
            </map>
            <map to='#bf4e23'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.54285714285714282</bucket>
              </multibucket>
            </map>
            <map to='#c14f22'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.51515151515151514</bucket>
              </multibucket>
            </map>
            <map to='#c35122'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.5</bucket>
              </multibucket>
            </map>
            <map to='#c55222'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.47058823529411764</bucket>
              </multibucket>
            </map>
            <map to='#c85322'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.46666666666666667</bucket>
              </multibucket>
            </map>
            <map to='#ca5422'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.45714285714285713</bucket>
              </multibucket>
            </map>
            <map to='#cc5522'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.45454545454545453</bucket>
              </multibucket>
            </map>
            <map to='#ce5722'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.45161290322580644</bucket>
              </multibucket>
            </map>
            <map to='#d05821'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.44444444444444442</bucket>
              </multibucket>
            </map>
            <map to='#d25921'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.4375</bucket>
              </multibucket>
            </map>
            <map to='#d45a21'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.41666666666666669</bucket>
              </multibucket>
            </map>
            <map to='#d75c21'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.40625</bucket>
              </multibucket>
            </map>
            <map to='#d95d20'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.38709677419354838</bucket>
              </multibucket>
            </map>
            <map to='#db5e20'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.37931034482758619</bucket>
              </multibucket>
            </map>
            <map to='#dd6020'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.375</bucket>
              </multibucket>
            </map>
            <map to='#e06120'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.37142857142857144</bucket>
              </multibucket>
            </map>
            <map to='#e16320'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.36666666666666664</bucket>
              </multibucket>
            </map>
            <map to='#e36420'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.36363636363636365</bucket>
              </multibucket>
            </map>
            <map to='#e56620'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.34285714285714286</bucket>
              </multibucket>
            </map>
            <map to='#e66820'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.33333333333333331</bucket>
              </multibucket>
            </map>
            <map to='#e86920'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.32258064516129031</bucket>
              </multibucket>
            </map>
            <map to='#e96b20'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.30303030303030304</bucket>
              </multibucket>
            </map>
            <map to='#eb6d20'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.29999999999999999</bucket>
              </multibucket>
            </map>
            <map to='#ed6f20'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.29411764705882354</bucket>
              </multibucket>
            </map>
            <map to='#ed7121'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.28125</bucket>
              </multibucket>
            </map>
            <map to='#ee7422'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.26470588235294118</bucket>
              </multibucket>
            </map>
            <map to='#ee7623'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.26315789473684209</bucket>
              </multibucket>
            </map>
            <map to='#ef7925'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.25925925925925924</bucket>
              </multibucket>
            </map>
            <map to='#f07b26'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.25806451612903225</bucket>
              </multibucket>
            </map>
            <map to='#f07e27'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.25</bucket>
              </multibucket>
            </map>
            <map to='#f18029'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.24242424242424243</bucket>
              </multibucket>
            </map>
            <map to='#f2832a'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.23529411764705882</bucket>
              </multibucket>
            </map>
            <map to='#f2852c'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.22857142857142856</bucket>
              </multibucket>
            </map>
            <map to='#f2882d'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.21212121212121213</bucket>
              </multibucket>
            </map>
            <map to='#f38a2f'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.20833333333333334</bucket>
              </multibucket>
            </map>
            <map to='#f38d30'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.20000000000000001</bucket>
              </multibucket>
            </map>
            <map to='#f48f32'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.19354838709677419</bucket>
              </multibucket>
            </map>
            <map to='#f49234'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.18518518518518517</bucket>
              </multibucket>
            </map>
            <map to='#f49435'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.18181818181818182</bucket>
              </multibucket>
            </map>
            <map to='#f59737'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.17647058823529413</bucket>
              </multibucket>
            </map>
            <map to='#f5993a'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.17241379310344829</bucket>
              </multibucket>
            </map>
            <map to='#f59c3c'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.16666666666666666</bucket>
              </multibucket>
            </map>
            <map to='#f59e3e'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.16129032258064516</bucket>
              </multibucket>
            </map>
            <map to='#f5a140'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.15625</bucket>
              </multibucket>
            </map>
            <map to='#f5a342'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.14705882352941177</bucket>
              </multibucket>
            </map>
            <map to='#f5a645'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.12903225806451613</bucket>
              </multibucket>
            </map>
            <map to='#f5a847'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.125</bucket>
              </multibucket>
            </map>
            <map to='#f5aa4c'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.12121212121212122</bucket>
              </multibucket>
            </map>
            <map to='#f6ac50'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.11428571428571428</bucket>
              </multibucket>
            </map>
            <map to='#f7ae54'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.10344827586206896</bucket>
              </multibucket>
            </map>
            <map to='#f7b058'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.096774193548387094</bucket>
              </multibucket>
            </map>
            <map to='#f8b25c'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.09375</bucket>
              </multibucket>
            </map>
            <map to='#f9b461'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.090909090909090912</bucket>
              </multibucket>
            </map>
            <map to='#f9b665'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.088235294117647065</bucket>
              </multibucket>
            </map>
            <map to='#fab869'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.064516129032258063</bucket>
              </multibucket>
            </map>
            <map to='#fbba6d'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.0625</bucket>
              </multibucket>
            </map>
            <map to='#fbbc71'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.033333333333333333</bucket>
              </multibucket>
            </map>
            <map to='#fcbe75'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.032258064516129031</bucket>
              </multibucket>
            </map>
            <map to='#fdc079'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.03125</bucket>
              </multibucket>
            </map>
            <map to='#fdc27d'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.030303030303030304</bucket>
              </multibucket>
            </map>
            <map to='#fec481'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>0.0</bucket>
              </multibucket>
            </map>
            <map to='#ffc685'>
              <multibucket>
                <bucket>&quot;2. Hillary&quot;</bucket>
                <bucket>%null%</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_638103838439989253:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Trump&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Calculation_638103838439989253:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bannon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Democrat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kellyanne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Obama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bigot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;birth certificate&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bush&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Osama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trump&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='natural' column='[none:SearchCalc (copy):nk]' direction='ASC' />
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
          <calculation class='tableau' formula='&quot;Trump&quot;' />
        </column>
        <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
          <calculation class='tableau' formula='&quot;Clinton&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.19ub8o602xy16y10tkeoe04nbicj'>
      <datasources>
        <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
      </datasources>
      <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
        <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Calculation_638103838439989253:nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:Calculation_638103838439989253:nk]' member='%null%' />
            <groupfilter function='member' level='[none:Calculation_638103838439989253:nk]' member='&quot;&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 7' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Terms Line Graph' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Calendar Heatmap'>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
              <calculation class='tableau' formula='&quot;Trump&quot;' />
            </column>
            <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
              <calculation class='tableau' formula='&quot;Clinton&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
            <column caption='.strSearch2' datatype='string' name='[.strSearch1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Search1 (copy)]' />
            </column>
            <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
            </column>
            <column caption='.strSearch1' datatype='string' name='[Calculation_638103838452502539]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='16' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]' value='true' />
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[:Measure Names]' value='false' />
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='false' />
            <format attr='text-format' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]' value='' />
            <format attr='text-format' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]' />
              <lod column='[federated.19ub8o602xy16y10tkeoe04nbicj].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]</rows>
        <cols>[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]</cols>
        <show-full-range>
          <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[DATE]</column>
        </show-full-range>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='95.000000' enabled='false' fill-type='fill-zero' forecast-agg='Month-Trunc' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='1' range-type='next' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Jokes Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
              <calculation class='tableau' formula='&quot;Trump&quot;' />
            </column>
            <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
              <calculation class='tableau' formula='&quot;Clinton&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
            <column caption='.strSearch2' datatype='string' name='[.strSearch1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Search1 (copy)]' />
            </column>
            <column caption='Comedian' datatype='string' name='[COMEDIAN]' role='dimension' type='nominal' />
            <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
            </column>
            <column caption='.strSearch1' datatype='string' name='[Calculation_638103838452502539]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_638103838502015010]' role='measure' type='quantitative' user:unnamed='Jokes Table'>
              <calculation class='tableau' formula='0' />
              <aliases>
                <alias key='0' value='Joke' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[KEY]' role='dimension' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COMEDIAN]' derivation='None' name='[none:COMEDIAN:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_638103838502015010]' derivation='None' name='[none:Calculation_638103838502015010:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='None' name='[none:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[JOKE]' derivation='None' name='[none:JOKE:nk]' pivot='key' type='nominal' />
            <column-instance column='[KEY]' derivation='None' name='[none:KEY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (MONTH(Date)) 1]'>
            <groupfilter function='level-members' level='[mn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (Search Term,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_638103838439989253]' />
              <groupfilter function='level-members' level='[tmn:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (MONTH(Date)) 1]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date))]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (Search Term,MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='867' />
            <format attr='height' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' value='41' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:COMEDIAN:nk]' value='120' />
            <format attr='width' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' value='100' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:KEY:ok]' value='false' />
            <format attr='text-align' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838502015010:ok]' value='center' />
            <format attr='text-align' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' value='center' />
            <format attr='text-align' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:COMEDIAN:nk]' value='center' />
            <format attr='vertical-align' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:COMEDIAN:nk]' value='center' />
            <format attr='vertical-align' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' value='center' />
            <format attr='text-align' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:DATE:ok]' value='center' />
            <format attr='vertical-align' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:DATE:ok]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='2' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:JOKE:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19ub8o602xy16y10tkeoe04nbicj].[none:DATE:ok] / ([federated.19ub8o602xy16y10tkeoe04nbicj].[none:KEY:ok] / ([federated.19ub8o602xy16y10tkeoe04nbicj].[none:COMEDIAN:nk] / [federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk])))</rows>
        <cols>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838502015010:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
              <calculation class='tableau' formula='&quot;Trump&quot;' />
            </column>
            <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
              <calculation class='tableau' formula='&quot;Clinton&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
            <column caption='.strSearch2' datatype='string' name='[.strSearch1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Search1 (copy)]' />
            </column>
            <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
            </column>
            <column caption='.strSearch1' datatype='string' name='[Calculation_638103838452502539]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='.MYstr' datatype='string' name='[Calculation_638103838508277798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(DATEPART(&apos;month&apos;,[DATE])) + &quot;/&quot;+STR(DATEPART(&apos;year&apos;,[DATE]))' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_638103838508277798]' derivation='Attribute' name='[attr:Calculation_638103838508277798:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Quarter-Trunc' name='[tqr:DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' value='off' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[tqr:DATE:qk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#55555500' />
            <format attr='color' value='#333333' />
            <format attr='title' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[tqr:DATE:qk]' value='Date FIlter' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' />
              <tooltip column='[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:Calculation_638103838508277798:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]</rows>
        <cols>[federated.19ub8o602xy16y10tkeoe04nbicj].[tqr:DATE:qk]</cols>
        <show-full-range>
          <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[DATE]</column>
        </show-full-range>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='95.000000' enabled='false' fill-type='fill-zero' forecast-agg='Month-Trunc' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
              <calculation class='tableau' formula='&quot;Trump&quot;' />
            </column>
            <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
              <calculation class='tableau' formula='&quot;Clinton&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
            <column caption='.strSearch2' datatype='string' name='[.strSearch1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Search1 (copy)]' />
            </column>
            <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
            </column>
            <column caption='.strSearch1' datatype='string' name='[Calculation_638103838452502539]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='MIN(1)' datatype='integer' name='[Calculation_638103838511157297]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='MIN(1)' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_638103838511157297]' derivation='User' name='[usr:Calculation_638103838511157297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date))]'>
            <groupfilter function='union' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE:ok]' member='2015' />
              <groupfilter function='member' level='[yr:DATE:ok]' member='2016' />
              <groupfilter function='member' level='[yr:DATE:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]' field-type='quantitative' max='1' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]' />
              <text column='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]</rows>
        <cols>[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
              <calculation class='tableau' formula='&quot;Trump&quot;' />
            </column>
            <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
              <calculation class='tableau' formula='&quot;Clinton&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
            <column caption='.strSearch2' datatype='string' name='[.strSearch1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Search1 (copy)]' />
            </column>
            <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
            </column>
            <column caption='.strSearch1' datatype='string' name='[Calculation_638103838452502539]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='MIN(1)' datatype='integer' name='[Calculation_638103838511157297]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='MIN(1)' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_638103838511157297]' derivation='User' name='[usr:Calculation_638103838511157297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (MONTH(Date)) 1]'>
            <groupfilter function='level-members' level='[mn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (Search Term,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_638103838439989253]' />
              <groupfilter function='level-members' level='[tmn:DATE:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (MONTH(Date)) 1]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (Search Term,MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]' field-type='quantitative' max='1' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='false' />
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]' />
              <text column='[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838511157297:qk]</rows>
        <cols>[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Terms Line Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
              <calculation class='tableau' formula='&quot;Trump&quot;' />
            </column>
            <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
              <calculation class='tableau' formula='&quot;Clinton&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
            <column caption='.strSearch2' datatype='string' name='[.strSearch1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Search1 (copy)]' />
            </column>
            <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
            </column>
            <column caption='.strSearch1' datatype='string' name='[Calculation_638103838452502539]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='# Records Connected' datatype='integer' name='[Calculation_982629209923059715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(LOOKUP(SUM([Number of Records]),0))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Quarter' name='[qr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_982629209923059715]' derivation='User' name='[usr:Calculation_982629209923059715:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (MONTH(Date)) 1]'>
            <groupfilter function='level-members' level='[mn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (MONTH(Date)) 1]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' value='off' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
            <format attr='subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]' value='true' />
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='false' />
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[qr:DATE:ok]' value='false' />
            <format attr='font-size' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='8' />
            <format attr='text-format' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='iLLLLL' />
            <format attr='text-format' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]' value='' />
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:qk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#55555500' />
            <format attr='color' value='#333333' />
            <format attr='title' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:qk]' value='Date FIlter' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]</rows>
        <cols>[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:qk]</cols>
        <show-full-range>
          <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[DATE]</column>
        </show-full-range>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='95.000000' enabled='false' fill-type='fill-zero' forecast-agg='Month-Trunc' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Weekly Area Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Trump&quot;'>
              <calculation class='tableau' formula='&quot;Trump&quot;' />
            </column>
            <column caption='Search2' datatype='string' name='[Search1 (copy)]' param-domain-type='any' role='measure' type='nominal' value='&quot;Clinton&quot;'>
              <calculation class='tableau' formula='&quot;Clinton&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
            <column caption='.strSearch2' datatype='string' name='[.strSearch1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Search1 (copy)]' />
            </column>
            <column caption='.Search Term' datatype='string' name='[Calculation_638103838439989253]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN [Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN [.strSearch1 (copy)]&#13;&#10;END' />
            </column>
            <column caption='.strSearch1' datatype='string' name='[Calculation_638103838452502539]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='# Records Connected' datatype='integer' name='[Calculation_982629209923059715]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(LOOKUP(SUM([Number of Records]),0))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='SearchCalc w/ Both LABEL' datatype='string' name='[SearchCalc (copy) - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.19ub8o602xy16y10tkeoe04nbicj].[SearchCalc (copy)]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [SearchCalc (copy)], &quot; &quot;, -1 ) )' />
            </column>
            <column caption='SearchCalc w/ Both' datatype='string' name='[SearchCalc (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) AND CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN &quot;3. &quot;+&quot;Both&quot;&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([Calculation_638103838452502539])) THEN &quot;1. &quot;+[Calculation_638103838452502539]&#13;&#10;ELSEIF CONTAINS(LOWER([JOKE]),LOWER([.strSearch1 (copy)])) THEN &quot;2. &quot;+[.strSearch1 (copy)]&#13;&#10;END' />
            </column>
            <column-instance column='[SearchCalc (copy) - Split 1]' derivation='Attribute' name='[attr:SearchCalc (copy) - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_638103838439989253]' derivation='None' name='[none:Calculation_638103838439989253:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Quarter' name='[qr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_982629209923059715]' derivation='User' name='[usr:Calculation_982629209923059715:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (Search1Calc,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_638103838439989253]' />
              <groupfilter function='level-members' level='[tmn:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date),MONTH(Date),SearchCalc w/ Both)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
              <groupfilter function='level-members' level='[SearchCalc (copy)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date),QUARTER(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[qr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (MONTH(Date))]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date),QUARTER(Date),MONTH(Date))]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (Search1Calc,MONTH(Date))]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date),MONTH(Date),SearchCalc w/ Both)]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date))]</column>
            <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[twk:DATE:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[twk:DATE:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[twk:DATE:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[twk:DATE:qk]' scope='cols' value='false' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='false' />
            <format attr='tick-color' value='#00000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:ok]' value='false' />
            <format attr='display' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' />
              <lod column='[federated.19ub8o602xy16y10tkeoe04nbicj].[attr:SearchCalc (copy) - Split 1:nk]' />
              <lod column='[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]' />
              <lod column='[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='472' />
                <format attr='maxwidth' value='472' />
                <format attr='minheight' value='60' />
                <format attr='maxheight' value='60' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows include-empty='true'>([federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk] * [federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk])</rows>
        <cols include-empty='true'>[federated.19ub8o602xy16y10tkeoe04nbicj].[twk:DATE:qk]</cols>
        <show-full-range>
          <column>[federated.19ub8o602xy16y10tkeoe04nbicj].[DATE]</column>
        </show-full-range>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_31' value='center' />
          <format attr='vertical-align' id='dash-text_31' value='center' />
          <format attr='background-color' id='dash-text_31' value='#555555' />
          <format attr='border-style' id='dash-text_31' value='solid' />
          <format attr='border-color' id='dash-text_31' value='#555555' />
          <format attr='border-width' id='dash-text_31' value='1' />
          <format attr='wrap' id='dash-text_31' value='on' />
          <format attr='text-orientation' id='dash-text_31' value='0' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_30' value='#555555' />
          <format attr='border-style' id='dash-zone_30' value='solid' />
          <format attr='border-color' id='dash-zone_30' value='#555555' />
          <format attr='border-width' id='dash-zone_30' value='5' />
          <format attr='background-color' id='dash-zone_29' value='#555555' />
          <format attr='border-width' id='dash-zone_29' value='5' />
          <format attr='border-style' id='dash-zone_29' value='solid' />
          <format attr='border-color' id='dash-zone_29' value='#555555' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#555555' />
          <format attr='border-color' value='#555555' />
          <format attr='border-style' value='solid' />
          <format attr='font-family' value='Tableau Bold' />
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#ffffff' />
          <format attr='text-align' value='center' />
          <format attr='font-family' value='Tableau Bold' />
          <format attr='font-size' value='10' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' preset-index='4' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.19ub8o602xy16y10tkeoe04nbicj' />
      </datasources>
      <datasource-dependencies datasource='federated.19ub8o602xy16y10tkeoe04nbicj'>
        <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='quantitative' />
        <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='32' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='788' h='100000' id='28' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='49' h='6125' id='29' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='146' forceUpdate='true' h='4125' id='31' is-fixed='true' type='text' w='11847' x='770' y='1250'>
                  <formatted-text>
                    <run fontalignment='2' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12'>Enter terms here</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='28' h='4125' id='41' is-fixed='true' type='text' w='2770' x='12617' y='1250'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='20'>→</run>
                  </formatted-text>
                </zone>
                <zone custom-title='true' fixed-size='192' h='4125' id='17' is-fixed='true' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='15385' x='15387' y='1250'>
                  <formatted-text>
                    <run>Term 1</run>
                  </formatted-text>
                </zone>
                <zone custom-title='true' fixed-size='183' h='4125' id='19' is-fixed='true' mode='type_in' param='[Parameters].[Search1 (copy)]' type='paramctrl' w='14693' x='30772' y='1250'>
                  <formatted-text>
                    <run>Term 2</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='30' h='4125' id='42' is-fixed='true' type='text' w='2924' x='45465' y='1250'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Tableau Bold' fontsize='20'>←</run>
                  </formatted-text>
                </zone>
                <zone forceUpdate='true' h='4125' id='43' type='text' w='20959' x='48389' y='1250'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12'>Term 2 optional</run>
                  </formatted-text>
                </zone>
                <zone h='4125' id='45' name='Terms Line Graph' param='[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:qk]' show-null-ctrls='false' show-reldate-picker='false' type='filter' values='relevant' w='29882' x='69348' y='1250' />
              </zone>
              <zone fixed-size='36' h='5500' id='46' is-fixed='true' name='Sheet 7' show-title='false' w='100000' x='0' y='6125'>
                <layout-cache minheight='100' type-h='scalable' type-w='fixed' />
              </zone>
              <zone h='87875' id='26' type='layout-basic' w='100000' x='0' y='11625'>
                <zone fixed-size='250' h='45822' id='8' is-fixed='true' name='Terms Line Graph' show-title='false' w='100000' x='0' y='11625'>
                  <layout-cache minheight='129' minwidth='159' type-h='scalable' type-w='scalable' />
                </zone>
                <zone h='42053' id='44' name='Jokes Table' show-title='false' w='100000' x='0' y='57447'>
                  <layout-cache cell-count-w='1' non-cell-size-w='259' type-h='fixed' type-w='cell' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='7250' id='48' name='Terms Line Graph' pane-specification-id='2' param='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' show-title='false' type='color' w='10769' x='1077' y='12375' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='26'>Po</run>
            <run bold='true' fontalignment='1' fontcolor='#e15759' fontsize='26'>lol</run>
            <run bold='true' fontalignment='1' fontsize='26'>itical Humor: </run>
            <run fontalignment='1' fontname='Tableau Light' fontsize='26'>A Visualization</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='text-align' value='center' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='text-align' value='left' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6328' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='7365' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='6328' />
            <zone h='85892' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='13693'>
              <flipboard active-id='1' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Dashboard 1' id='1'>
                    <currentDeltas>
                      <worksheet name='Terms Line Graph'>
                        <filter class='categorical' column='[federated.19ub8o602xy16y10tkeoe04nbicj].[Action (YEAR(Date),MONTH(Date),SearchCalc w/ Both)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[yr:DATE:ok]' />
                            <groupfilter function='level-members' level='[mn:DATE:ok]' />
                            <groupfilter function='level-members' level='[SearchCalc (copy)]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Calendar Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[Multiple Values]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:SearchCalc (copy):nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Terms Line Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Search1 (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[my:DATE:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838508277798:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Date (Month / Year):ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Search1Calc (copy):nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:qk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[tyr:DATE:qk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209922396162:qk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Search1 (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[my:DATE:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838508277798:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Date (Month / Year):ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Search1Calc (copy):nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:qk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[tyr:DATE:qk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209922396162:qk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19ub8o602xy16y10tkeoe04nbicj].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[mn:DATE:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Jokes Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Search1 (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[Comedian (group)]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:COMEDIAN:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:JOKE:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:KEY:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Weekly Area Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[Comedian (group)]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[dy:DATE:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:.Row (copy):ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:COMEDIAN:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838456983570:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[tmn:DATE:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_638103838456676368:ok]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[usr:Calculation_982629209923059715:qk]</field>
            <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Jokes Table'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Terms Line Graph'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.19ub8o602xy16y10tkeoe04nbicj].[none:Calculation_638103838439989253:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Calendar Heatmap' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Jokes Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFnElEQVR4nO3XW28UdQCG8Xd2Z6d76GHb0tJWehJQBJQYMTHxBj8BX4kvJNxy440JiYle
      GILBWBENpfRAu93ucWZndrwwJGBUDm03Me/zu9qLyf+dZObZzQZ5nucCTIWSRANwFb74cPPW
      7ZEOr6wsqFIZG9leu91Vv5+MbG/9TFV37t4b2Z4kXbp6RWEYvv7CEzI/Pz3SZ7i6UNfqYv1E
      zyyc6GnA/wwBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwNpbBbA0O67ZybJKYVHTtUhhsaCwWNDk
      eFmlsKCJcqiwECgsBMe6qWHS18YP36jbPlK3daSd3x4o6cfqt5saDBKlg1idxq7SJFGvc6Qs
      TZWl6bE2X/jswrzq9QldXqipXosUFgOVo6Imq5GW5yZUjYonsvOyQmlMX11bValU0sxEWVFU
      0tz0hC6tzZ3aN9Qn5+c1Xi3r8/VpTdXGFIUFFY/53P5Tsqe97UOlg0SDfludo6b6rYYGg5N5
      bv/k6eNfNUhixd19bfz0i4ZponSYv3JN+ManBYFq4zV9eq6u1u5zHaWBOkmmYqGg2ZlJxWmm
      rLGvXjSudvNQm434nW88z3MNs6Ge/fy9OnGg2dlJbW/8qCwoaqxc1nDQV3NrQ1FtTrVzHyo9
      uK+plWuaqk+88+YLrWSo1alIcTbU9YuzarY62m5nirJYxSjU4nRVj3Zax9552fLSGc3PTunq
      2kClKFIU5NrvpRoPM53WK9noDHR5aVyH3Uwfv39Wca+rOE714MmhhqewlyU9bf/+WP3mmIJh
      pkwFNf64r5nzX2jl4gcnvpfnufqdlh49vK80aWsYS999+1TXb9x45bo3DmBhdkK7e4cKhqma
      hy21B7lq1bJqxVxbe4dqdRN1Wh0tL47p6TFefkkqhJHWrn2pPG7r4OBIURCrNL+gcqWi7v6m
      suqUwlKkytScqtNz2us1NXkCL78kbe40VS4VlOXSIB2q0eqp0Uu1NlfTzvOWsvz1Z7ytw/0D
      fb21q/WlGUVxSw+ftzVUQeVQp/IyStJ+o6VuJ1ScDpVkQ/WSgaIgP7W9vZ2mzn+0rt2tZzq7
      fEFBINUqJYWTc6eyd7S3qcr0onTwRFPvXVSUZ9pv9RX97VcuyP+im7dun8qN/JuVlQVVKmMj
      22u3u+r3k5HtrZ+p6s7deyPbk6RLV68oDN/8R/245uenR/oMVxfqWl2sn+iZ/AmGNQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKAtT8Bl1NPgkqLci4AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAHSElEQVR4nO3XXVMb9xmG8Vv7otW7hCSQBdhg7OLX1iHjJgf9Av26+QzJDDlx0s50MnEc
      M0kdg7GFJKSVVlppd3uQ9CyWiHrW5/odMQP3n4XlWqRclmWZAKM8SaIBWOX994MvXg43PsTJ
      SWXPUT9abnzGbi2v4Tz5H64hJ9fJbbzP4lgvzq423u/VA7344WLj/XQy1elXpxvv7+23dfTo
      qcLZYuMzHt9p6tXFaOO957lyHGfj/XG3prMP4cb758dd9ed/7GG++dUC/wcIAKYRAEwjAJhG
      ADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0A
      YBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHA
      NAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBp
      BADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMI
      AKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEA
      TCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEzzPvaJ4buf1R/NNfnwk7xqXeG7nhrdXQ3Pf9Tu
      yd+1t1NdefB8fKXXr/+tgjPT9TRVPovkFpua9H9RY/+x7h3fX7lPk1j/OD3VXrelN2/O5ZUq
      Wi5SBbmZnPK2njx7tnKfLKb61+mXyvyyppORas2Wwkmsqr9QGjT155NPVu6lVG+//1bzRaL5
      eKBSfVvheKjOnSPNZ5n2ju6u2UvD8x91PRzJWUZyi1XNw74q7QOFV29168FnKhbzK/cHex3t
      1QOl+UDzKFK9WtHl+572Oi19/c9XCuN05b5aLuhou6TJPJWnVDnfVzSJVKiXdfnmSoPF6r3v
      e7q/W1cyi1XIuxrHmYJcKvm+ev2xepPFyv1iOtT599/IqXYURxOVCq6WCpSLr1Xbf6Jao7Fy
      Ly309rtvlSaZ5vOJCo1bkhvImV9pkavo4MHjlessi/X6m6+VZo6iaahy65Ymo7EqQaZFrqSH
      J88//h+g0bktz8nUaG3r6rKv2lZZ4+lSzf1j7a7545ekoNpStVpUo7Wj/uWFGq22epe/KMuk
      5SJeu3fcvNqdjmqtHcXhB/nFhvrvzlVvtdV7d7F2n8u5Kre6KpdLOrp/W6OJ1KyX5ZW3lHdX
      3/jfTpBfKKvebqq9/yeNej3tHNyWX2rKc3M32EuuH2iru6ug1lUyHaixd6jFfKZKe19B4K/d
      zxcLnZ1fa3Q9ULFS0dnPH+T7Oc2SVK7WX0OSpno/mGqxTDRLcppGMxUqZe3WAtWL679/mmUK
      x5FmSab+dKlclihKMsXLVI1ysHbvOK6K24fKe66qtapyXkl539V0NNCot/4eSq78YlVBqaLd
      owONhnPl81sqVRvq3H1wg72joLKlYrmiw+NDDYaxtho1JWmq5XLx21d8xNXbMw0G13I9Xw9P
      PpeXL+jBX55pe+/ODX71UnT9XoP3l4qX0vEnn/16zqd/U6vT1XZ3d+0+XUYavr/Q4DpU8/CZ
      9nYqevDp5/I9X49O/rp2nywihcOB6tu3NLhO9fTRbXmlhrZqJdV3bq//AbJEs3CkVEXF0Vj3
      n3+u2TiW5n2Fo76SGzQUR2NF40i+t1Tz6ESLcKJqo6bZeKhlkqzdV0sFNWueoqWnly9/UrUe
      6Lw/0zScaLJcvy/4nipFX6PZUtMo0izJ6fxdX19+d6HzcP1DyHddFQNfo2ksJ0vUmywVzWJF
      8VJX49na/TKOFIdDletNyS2qUqsoqLa1c/hQtXZ37V5prFkYqtDY1qA3072HB/L9mYJaR4W8
      u36fzDUdXavc6uiqN9eTp3eloKJWZ1fNW/uSpFz2K33xcrj+wI9wclLZc9SPlhufsVvLazhf
      f1M/fg05uc7Nnsy/J4tjvTi72ni/Vw/04oebPNV+33Qy1elXpxvv7+23dfToqcLZ6pclqzy+
      09Sri9HGe89z5Tibv6087tZ09iHceP/8uKv+PPtDG94EwzQCgGkEANMIAKYRAEwjAJhGADCN
      AGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoB
      wDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKA
      aQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADT
      CACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYR
      AEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCY9h80DvujwGZeqwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Terms Line Graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly Area Graph' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
