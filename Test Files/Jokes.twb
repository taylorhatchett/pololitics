<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1223.0056                               -->
<workbook source-build='10.1.3 (10100.16.1223.0056)' source-platform='mac' version='10.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Jokes' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-family' value='Arial Narrow' />
      <format attr='font-size' value='11' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-family' value='Arial Narrow' />
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='tooltip'>
      <format attr='font-family' value='Arial Narrow' />
      <format attr='font-size' value='11' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;china&quot;'>
        <calculation class='tableau' formula='&quot;china&quot;' />
      </column>
      <column caption='Search Box' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Osama&quot;'>
        <calculation class='tableau' formula='&quot;Osama&quot;' />
      </column>
      <column caption='Wildcard' datatype='string' name='[Parameter 3]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
    </datasource>
    <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' inline='true' name='federated.0wnexc60n5k6xe1793cbt1uczsw6' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Edited Jokes - Late Night Only' name='excel-direct.150mucp008v9dr1eo7qt60lb1isl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/thatchett/Documents/Jokes Analysis/Edited Jokes - Late Night Only.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.150mucp008v9dr1eo7qt60lb1isl' name='Edited Jokes - Late Night Only' table='[&apos;Edited Jokes - Late Night Only$&apos;]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
            <column datatype='string' name='JOKE' ordinal='0' />
            <column datatype='integer' name='KEY' ordinal='1' />
            <column datatype='date' name='DATE' ordinal='2' />
            <column datatype='string' name='COMEDIAN' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>JOKE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOKE]</local-name>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias>JOKE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KEY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KEY]</local-name>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias>KEY</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMEDIAN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COMEDIAN]</local-name>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias>COMEDIAN</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Edited Jokes - Late Night Only]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Comedian' datatype='string' name='[COMEDIAN]' role='dimension' type='nominal' />
      <column caption='SearchBool' datatype='boolean' name='[Calculation_2012405379324764161]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(UPPER([JOKE]),UPPER([Parameters].[Parameter 1]))' />
      </column>
      <column caption='S1' datatype='integer' name='[Calculation_2012405379326083074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;)' />
      </column>
      <column caption='S2' datatype='integer' name='[Calculation_2012405379326169091]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;,[Calculation_2012405379326083074]+1)' />
      </column>
      <column caption='S3' datatype='integer' name='[Calculation_2012405379326349316]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_2012405379326169091] != 0 THEN FIND([Parameters].[Parameter 2],&quot; &quot;,[Calculation_2012405379326169091]+1) END' />
      </column>
      <column caption='W1' datatype='string' name='[Calculation_2012405379326509061]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN [Parameters].[Parameter 2] ELSE LEFT([Parameters].[Parameter 2],[Calculation_2012405379326083074]-1) END' />
      </column>
      <column caption='W2' datatype='string' name='[Calculation_2012405379326644230]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN &quot;&quot;&#10;ELSEIF [Calculation_2012405379326083074] != 0 AND [Calculation_2012405379326169091] = 0 THEN &quot;&quot;&#10;ELSE MID([Parameters].[Parameter 2],[Calculation_2012405379326083074]+1,[Calculation_2012405379326169091]-[Calculation_2012405379326083074])&#10;END' />
      </column>
      <column caption='W3' datatype='string' name='[Calculation_2012405379326832647]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_2012405379326169091] = 0 THEN &quot;&quot;&#10;ELSEIF [Calculation_2012405379326083074] != 0 AND [Calculation_2012405379326169091] != 0 AND [Calculation_2012405379326349316] = 0 THEN &quot;&quot;&#10;ELSE MID([Parameters].[Parameter 2],[Calculation_2012405379326169091]+1,[Calculation_2012405379326349316]-[Calculation_2012405379326169091])&#10;END' />
      </column>
      <column caption='Search' datatype='boolean' name='[Calculation_2012405379327201288]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='(CONTAINS([JOKE],[Calculation_2012405379326509061]) AND CONTAINS([JOKE],[Calculation_2012405379326644230]))' />
      </column>
      <column caption='Hover' datatype='string' name='[Calculation_2012405379341660170]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Hover to read joke&quot;' />
      </column>
      <column caption='Wildcard Search' datatype='boolean' name='[Calculation_2012405379349274637]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='LOWER(LEFT([JOKE],LEN([Parameters].[Parameter 3]))) = LOWER([Parameters].[Parameter 3])' />
      </column>
      <column caption='Sum ZN Lookup' datatype='integer' name='[Calculation_2012405379352752142]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(LOOKUP(SUM([Number of Records]),0))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Joke (Trim)' datatype='string' name='[Calculation_2012405379356745748]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='TRIM([JOKE])' />
      </column>
      <column datatype='string' name='[Comedian (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[COMEDIAN]' new-bin='true'>
          <bin default-name='false' value='&quot;Conan O&apos;Brien&quot;'>
            <value>&quot;Conan OBrian&quot;</value>
            <value>&quot;Conan OBrien&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Craig Kilborn&quot;'>
            <value>&quot;Craig Kilbon&quot;</value>
            <value>&quot;Craig Kilborn&quot;</value>
            <value>&quot;Craig Kilburn&quot;</value>
            <value>&quot;Craig Killborn&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;David Letterman&quot;'>
            <value>&quot;Dave Letterman&quot;</value>
            <value>&quot;David Leterman&quot;</value>
            <value>&quot;David Letterman&quot;</value>
            <value>&quot;David Letterman (Current Events segment)&quot;</value>
            <value>&quot;Davie Letterman&quot;</value>
            <value>&quot;Davis Letterman&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Jay Leno&quot;'>
            <value>&quot;Jay Leno&quot;</value>
            <value>&quot;Jay Leno;&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Seth Meyers&quot;'>
            <value>&quot;Seth Meyers&quot;</value>
            <value>&quot;Seth Myers&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date (Exact)]' role='dimension' type='quantitative' user:agg-type='None' user:base-field='DATE' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='[DATE]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Date (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='DATE' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [DATE])*100 + DATEPART(&apos;month&apos;, [DATE]))' />
      </column>
      <column datatype='date' name='[Date (Months)]' role='dimension' type='quantitative' user:agg-type='Month-Trunc' user:base-field='DATE' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;, [DATE]))' />
      </column>
      <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[KEY]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Avg ZN Lookup' datatype='integer' name='[Sum ZN Lookup (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Date (Month / Year)])' />
      </column>
      <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Comedian (group))' hidden='true' name='[Action (Comedian (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Comedian (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Comedian (group),MONTH(Date))' hidden='true' name='[Action (Comedian (group),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Comedian (group)]' />
          <groupfilter function='level-members' level='[tmn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Comedian (group),WEEK(Date))' hidden='true' name='[Action (Comedian (group),WEEK(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Comedian (group)]' />
          <groupfilter function='level-members' level='[twk:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Comedian (group),YEAR(Date),MONTH(Date))' hidden='true' name='[Action (Comedian (group),YEAR(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Comedian (group)]' />
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date))' hidden='true' name='[Action (YEAR(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/thatchett/Documents/My Tableau Repository/Datasources/Jokes.tde' schema='Extract' tablename='Extract' update-time='01/16/2017 04:31:38 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_2012405379356745748]' formula='TRIM([JOKE])' />
            <calculation column='[Comedian (group)]' formula='CASE [COMEDIAN]&#10;  WHEN &quot;Conan OBrian&quot; THEN &quot;Conan O&apos;Brien&quot;&#10;  WHEN &quot;Conan OBrien&quot; THEN &quot;Conan O&apos;Brien&quot;&#10;  WHEN &quot;Craig Kilbon&quot; THEN &quot;Craig Kilborn&quot;&#10;  WHEN &quot;Craig Kilborn&quot; THEN &quot;Craig Kilborn&quot;&#10;  WHEN &quot;Craig Kilburn&quot; THEN &quot;Craig Kilborn&quot;&#10;  WHEN &quot;Craig Killborn&quot; THEN &quot;Craig Kilborn&quot;&#10;  WHEN &quot;Dave Letterman&quot; THEN &quot;David Letterman&quot;&#10;  WHEN &quot;David Leterman&quot; THEN &quot;David Letterman&quot;&#10;  WHEN &quot;David Letterman&quot; THEN &quot;David Letterman&quot;&#10;  WHEN &quot;David Letterman (Current Events segment)&quot; THEN &quot;David Letterman&quot;&#10;  WHEN &quot;Davie Letterman&quot; THEN &quot;David Letterman&quot;&#10;  WHEN &quot;Davis Letterman&quot; THEN &quot;David Letterman&quot;&#10;  WHEN &quot;Jay Leno&quot; THEN &quot;Jay Leno&quot;&#10;  WHEN &quot;Jay Leno;&quot; THEN &quot;Jay Leno&quot;&#10;  WHEN &quot;Seth Meyers&quot; THEN &quot;Seth Meyers&quot;&#10;  WHEN &quot;Seth Myers&quot; THEN &quot;Seth Meyers&quot;&#10;  ELSE [COMEDIAN]&#10;END' />
            <calculation column='[Date (Exact)]' formula='[DATE]' />
            <calculation column='[Date (Month / Year)]' formula='(DATEPART(&apos;year&apos;, [DATE])*100 + DATEPART(&apos;month&apos;, [DATE]))' />
            <calculation column='[Date (Months)]' formula='DATE(DATETRUNC(&apos;month&apos;, [DATE]))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='48983' timestamp-start='2017-01-16 04:31:38.492' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COMEDIAN</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COMEDIAN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COMEDIAN</remote-alias>
              <ordinal>0</ordinal>
              <family>Edited Jokes - Late Night Only</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bill Maher&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Seth Myers&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48983</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE</remote-alias>
              <ordinal>1</ordinal>
              <family>Edited Jokes - Late Night Only</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4108</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1996-11-20#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-04-30#</statistic>
                <statistic aggregation='Count' datatype='integer'>48983</statistic>
                <statistic aggregation='Median' datatype='date'>#2006-04-25#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date (Exact)</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date (Exact)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date (Exact)</remote-alias>
              <ordinal>1</ordinal>
              <family>Edited Jokes - Late Night Only</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4108</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1996-11-20#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-04-30#</statistic>
                <statistic aggregation='Count' datatype='integer'>48983</statistic>
                <statistic aggregation='Median' datatype='date'>#2006-04-25#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>JOKE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[JOKE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>JOKE</remote-alias>
              <ordinal>2</ordinal>
              <family>Edited Jokes - Late Night Only</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48560</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&#10;A group of scientists in Washington.have discovered the largest bacteria ever identified.  Not surprisingly, it was on a co&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zillionaire Microsoft chairman, Bill Gates announced a plan today to give one billion dollars to fund scholarships for minori&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48976</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>KEY</remote-name>
              <remote-type>3</remote-type>
              <local-name>[KEY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>KEY</remote-alias>
              <ordinal>3</ordinal>
              <family>Edited Jokes - Late Night Only</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48983</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>16435060150.0</statistic>
                <statistic aggregation='Avg' datatype='real'>335525.79772574158</statistic>
                <statistic aggregation='Min' datatype='integer'>310268</statistic>
                <statistic aggregation='Max' datatype='integer'>361543</statistic>
                <statistic aggregation='Stdev' datatype='real'>14827.976944965583</statistic>
                <statistic aggregation='StdevP' datatype='real'>14827.825585793778</statistic>
                <statistic aggregation='Var' datatype='real'>219868900.28043085</statistic>
                <statistic aggregation='VarP' datatype='real'>219864411.60272062</statistic>
                <statistic aggregation='Count' datatype='integer'>48983</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5525156285972832.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>48983.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>48983</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48983.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_2012405379356745748</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_2012405379356745748]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2012405379356745748</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48559</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;- - Howard Stern received unlimited use of the Hubble space telescope to locate and observe lesbians.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zillionaire Microsoft chairman, Bill Gates announced a plan today to give one billion dollars to fund scholarships for minori&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48976</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Comedian (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Comedian (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Comedian (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bill Maher&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Seth Meyers&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48983</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;David Letterman&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date (Month / Year)</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Date (Month / Year)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date (Month / Year)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>199611</statistic>
                <statistic aggregation='Max' datatype='integer'>201504</statistic>
                <statistic aggregation='Count' datatype='integer'>48983</statistic>
                <statistic aggregation='Median' datatype='integer'>200604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date (Months)</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date (Months)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date (Months)</remote-alias>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>220</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1996-11-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-04-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>48983</statistic>
                <statistic aggregation='Median' datatype='date'>#2006-04-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.516304' measure-ordering='alphabetic' measure-percentage='0.288043' parameter-percentage='0.195652' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Comedian (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bill Maher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David Letterman&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Craig Kilborn&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Jimmy Kimmel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay Leno&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seth Meyers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craig Ferguson&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;George Lopez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Conan O&apos;Brien&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Jimmy Fallon&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Search1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;china&quot;'>
          <calculation class='tableau' formula='&quot;china&quot;' />
        </column>
        <column caption='Search Box' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Osama&quot;'>
          <calculation class='tableau' formula='&quot;Osama&quot;' />
        </column>
        <column caption='Wildcard' datatype='string' name='[Parameter 3]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0wnexc60n5k6xe1793cbt1uczsw6'>
      <datasources>
        <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.0wnexc60n5k6xe1793cbt1uczsw6' />
      </datasources>
      <datasource-dependencies datasource='federated.0wnexc60n5k6xe1793cbt1uczsw6'>
        <column caption='Search' datatype='boolean' name='[Calculation_2012405379327201288]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='(CONTAINS([JOKE],[Calculation_2012405379326509061]) AND CONTAINS([JOKE],[Calculation_2012405379326644230]))' />
        </column>
        <column-instance column='[Calculation_2012405379327201288]' derivation='None' name='[none:Calculation_2012405379327201288:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]'>
        <groupfilter function='member' level='[none:Calculation_2012405379327201288:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Jokes' type='sheet' worksheet='Jokes by Comedian (Treemap)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Frequency by Year (Sparkline)' />
        <param name='special-fields' value='all' />
        <param name='target' value='Jokes' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Jokes' type='sheet' worksheet='Frequency by Month (Highlight)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Frequency by Year (Sparkline)' />
        <param name='special-fields' value='all' />
        <param name='target' value='Jokes' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Jokes' type='sheet' worksheet='Frequency by Year (Sparkline)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Frequency by Month (Highlight)' />
        <param name='special-fields' value='all' />
        <param name='target' value='Jokes' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Frequency by Month (Highlight)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Frequency of &quot;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;[Parameters].[Parameter 2]&gt;</run>
            <run fontalignment='1' fontcolor='#ffffff'>&quot; by Month/Year</run>
            <run fontalignment='1' fontcolor='#ffffff' fontsize='10'>&#10;Click a colored space to filter by month and year. Click on month/year text to filter by month or year.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.0wnexc60n5k6xe1793cbt1uczsw6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Osama&quot;'>
              <calculation class='tableau' formula='&quot;Osama&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wnexc60n5k6xe1793cbt1uczsw6'>
            <column caption='Comedian' datatype='string' name='[COMEDIAN]' role='dimension' type='nominal' />
            <column caption='S1' datatype='integer' name='[Calculation_2012405379326083074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;)' />
            </column>
            <column caption='S2' datatype='integer' name='[Calculation_2012405379326169091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;,[Calculation_2012405379326083074]+1)' />
            </column>
            <column caption='W1' datatype='string' name='[Calculation_2012405379326509061]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN [Parameters].[Parameter 2] ELSE LEFT([Parameters].[Parameter 2],[Calculation_2012405379326083074]-1) END' />
            </column>
            <column caption='W2' datatype='string' name='[Calculation_2012405379326644230]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN &quot;&quot;&#10;ELSEIF [Calculation_2012405379326083074] != 0 AND [Calculation_2012405379326169091] = 0 THEN &quot;&quot;&#10;ELSE MID([Parameters].[Parameter 2],[Calculation_2012405379326083074]+1,[Calculation_2012405379326169091]-[Calculation_2012405379326083074])&#10;END' />
            </column>
            <column caption='Search' datatype='boolean' name='[Calculation_2012405379327201288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([JOKE],[Calculation_2012405379326509061]) AND CONTAINS([JOKE],[Calculation_2012405379326644230]))' />
            </column>
            <column caption='ZN(SUM([Number of Records]))' datatype='integer' name='[Calculation_2012405379339554825]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='ZN(SUM([Number of Records]))' />
            </column>
            <column datatype='string' name='[Comedian (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[COMEDIAN]' new-bin='true'>
                <bin default-name='false' value='&quot;Conan O&apos;Brien&quot;'>
                  <value>&quot;Conan OBrian&quot;</value>
                  <value>&quot;Conan OBrien&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Craig Kilborn&quot;'>
                  <value>&quot;Craig Kilbon&quot;</value>
                  <value>&quot;Craig Kilborn&quot;</value>
                  <value>&quot;Craig Kilburn&quot;</value>
                  <value>&quot;Craig Killborn&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;David Letterman&quot;'>
                  <value>&quot;Dave Letterman&quot;</value>
                  <value>&quot;David Leterman&quot;</value>
                  <value>&quot;David Letterman&quot;</value>
                  <value>&quot;David Letterman (Current Events segment)&quot;</value>
                  <value>&quot;Davie Letterman&quot;</value>
                  <value>&quot;Davis Letterman&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Jay Leno&quot;'>
                  <value>&quot;Jay Leno&quot;</value>
                  <value>&quot;Jay Leno;&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seth Meyers&quot;'>
                  <value>&quot;Seth Meyers&quot;</value>
                  <value>&quot;Seth Myers&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[DATE]' derivation='Attribute' name='[attr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379327201288]' derivation='None' name='[none:Calculation_2012405379327201288:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379339554825]' derivation='User' name='[usr:Calculation_2012405379339554825:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group))]'>
            <groupfilter function='level-members' level='[Comedian (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Comedian (group)]' />
              <groupfilter function='level-members' level='[tmn:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Comedian (group)]' />
              <groupfilter function='level-members' level='[twk:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Comedian (group)]' />
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),WEEK(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),MONTH(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),YEAR(Date),MONTH(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]' value='76' />
            <format attr='height' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='13' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='' />
            <format attr='text-format' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]' value='' />
            <format attr='text-align' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]' value='center' />
            <format attr='text-align' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='center' />
            <format attr='vertical-align' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='center' />
            <format attr='vertical-align' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]' value='center' />
            <format attr='font-size' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]' value='9' />
            <format attr='font-size' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379339554825:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#1e4371' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379339554825:qk]' />
              <lod column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:DATE:ok]' />
              <tooltip column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379339554825:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='14'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]&gt; &lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]&gt;</run>
                <run bold='true'>&#10;&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379339554825:qk]&gt; </run>
                <run fontcolor='#666666'>jokes mentioning</run>
                <run fontcolor='#787878'> &quot;</run>
                <run bold='true'>&lt;[Parameters].[Parameter 2]&gt;</run>
                <run>&quot;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]</rows>
        <cols>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]</cols>
        <show-full-range>
          <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[DATE]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Frequency by Year (Sparkline)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>&quot;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;[Parameters].[Parameter 2]&gt;</run>
            <run fontalignment='1' fontcolor='#ffffff'>&quot; Sparkline</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.0wnexc60n5k6xe1793cbt1uczsw6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Osama&quot;'>
              <calculation class='tableau' formula='&quot;Osama&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wnexc60n5k6xe1793cbt1uczsw6'>
            <column caption='Comedian' datatype='string' name='[COMEDIAN]' role='dimension' type='nominal' />
            <column caption='S1' datatype='integer' name='[Calculation_2012405379326083074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;)' />
            </column>
            <column caption='S2' datatype='integer' name='[Calculation_2012405379326169091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;,[Calculation_2012405379326083074]+1)' />
            </column>
            <column caption='W1' datatype='string' name='[Calculation_2012405379326509061]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN [Parameters].[Parameter 2] ELSE LEFT([Parameters].[Parameter 2],[Calculation_2012405379326083074]-1) END' />
            </column>
            <column caption='W2' datatype='string' name='[Calculation_2012405379326644230]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN &quot;&quot;&#10;ELSEIF [Calculation_2012405379326083074] != 0 AND [Calculation_2012405379326169091] = 0 THEN &quot;&quot;&#10;ELSE MID([Parameters].[Parameter 2],[Calculation_2012405379326083074]+1,[Calculation_2012405379326169091]-[Calculation_2012405379326083074])&#10;END' />
            </column>
            <column caption='Search' datatype='boolean' name='[Calculation_2012405379327201288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([JOKE],[Calculation_2012405379326509061]) AND CONTAINS([JOKE],[Calculation_2012405379326644230]))' />
            </column>
            <column caption='Sum ZN Lookup' datatype='integer' name='[Calculation_2012405379352752142]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(LOOKUP(SUM([Number of Records]),0))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Comedian (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[COMEDIAN]' new-bin='true'>
                <bin default-name='false' value='&quot;Conan O&apos;Brien&quot;'>
                  <value>&quot;Conan OBrian&quot;</value>
                  <value>&quot;Conan OBrien&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Craig Kilborn&quot;'>
                  <value>&quot;Craig Kilbon&quot;</value>
                  <value>&quot;Craig Kilborn&quot;</value>
                  <value>&quot;Craig Kilburn&quot;</value>
                  <value>&quot;Craig Killborn&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;David Letterman&quot;'>
                  <value>&quot;Dave Letterman&quot;</value>
                  <value>&quot;David Leterman&quot;</value>
                  <value>&quot;David Letterman&quot;</value>
                  <value>&quot;David Letterman (Current Events segment)&quot;</value>
                  <value>&quot;Davie Letterman&quot;</value>
                  <value>&quot;Davis Letterman&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Jay Leno&quot;'>
                  <value>&quot;Jay Leno&quot;</value>
                  <value>&quot;Jay Leno;&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seth Meyers&quot;'>
                  <value>&quot;Seth Meyers&quot;</value>
                  <value>&quot;Seth Myers&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[DATE]' derivation='Attribute' name='[attr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379327201288]' derivation='None' name='[none:Calculation_2012405379327201288:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379352752142]' derivation='User' name='[usr:Calculation_2012405379352752142:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group))]'>
            <groupfilter function='level-members' level='[Comedian (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date),MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]' scope='rows' value='false' />
            <format attr='line-pattern' value='none' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='iyyyy' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]' value='false' />
            <format attr='display' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='false' />
            <format attr='display' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]' value='false' />
            <format attr='text-format' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='iyyyy' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='cols' value='1' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#1e4371' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:DATE:ok]' />
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]' />
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]&gt;</run>
                <run> jokes in </run>
                <run bold='true'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='false'> Peak: </run>
                <run>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]&gt;</run>
                <run bold='false'> jokes in </run>
                <run>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]</rows>
        <cols>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]</cols>
        <show-full-range>
          <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[DATE]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Jokes (Text)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Jokes containing &quot;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;[Parameters].[Parameter 2]&gt;</run>
            <run fontalignment='1' fontcolor='#ffffff'>&quot; (sorted by date)</run>
            <run fontalignment='1' fontcolor='#ffffff' fontsize='10'>&#10;Hover over text to view entire joke</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.0wnexc60n5k6xe1793cbt1uczsw6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Osama&quot;'>
              <calculation class='tableau' formula='&quot;Osama&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wnexc60n5k6xe1793cbt1uczsw6'>
            <column caption='Comedian' datatype='string' name='[COMEDIAN]' role='dimension' type='nominal' />
            <column caption='S1' datatype='integer' name='[Calculation_2012405379326083074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;)' />
            </column>
            <column caption='S2' datatype='integer' name='[Calculation_2012405379326169091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;,[Calculation_2012405379326083074]+1)' />
            </column>
            <column caption='W1' datatype='string' name='[Calculation_2012405379326509061]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN [Parameters].[Parameter 2] ELSE LEFT([Parameters].[Parameter 2],[Calculation_2012405379326083074]-1) END' />
            </column>
            <column caption='W2' datatype='string' name='[Calculation_2012405379326644230]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN &quot;&quot;&#10;ELSEIF [Calculation_2012405379326083074] != 0 AND [Calculation_2012405379326169091] = 0 THEN &quot;&quot;&#10;ELSE MID([Parameters].[Parameter 2],[Calculation_2012405379326083074]+1,[Calculation_2012405379326169091]-[Calculation_2012405379326083074])&#10;END' />
            </column>
            <column caption='Search' datatype='boolean' name='[Calculation_2012405379327201288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([JOKE],[Calculation_2012405379326509061]) AND CONTAINS([JOKE],[Calculation_2012405379326644230]))' />
            </column>
            <column caption='Joke (Trim)' datatype='string' name='[Calculation_2012405379356745748]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM([JOKE])' />
            </column>
            <column datatype='string' name='[Comedian (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[COMEDIAN]' new-bin='true'>
                <bin default-name='false' value='&quot;Conan O&apos;Brien&quot;'>
                  <value>&quot;Conan OBrian&quot;</value>
                  <value>&quot;Conan OBrien&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Craig Kilborn&quot;'>
                  <value>&quot;Craig Kilbon&quot;</value>
                  <value>&quot;Craig Kilborn&quot;</value>
                  <value>&quot;Craig Kilburn&quot;</value>
                  <value>&quot;Craig Killborn&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;David Letterman&quot;'>
                  <value>&quot;Dave Letterman&quot;</value>
                  <value>&quot;David Leterman&quot;</value>
                  <value>&quot;David Letterman&quot;</value>
                  <value>&quot;David Letterman (Current Events segment)&quot;</value>
                  <value>&quot;Davie Letterman&quot;</value>
                  <value>&quot;Davis Letterman&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Jay Leno&quot;'>
                  <value>&quot;Jay Leno&quot;</value>
                  <value>&quot;Jay Leno;&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seth Meyers&quot;'>
                  <value>&quot;Seth Meyers&quot;</value>
                  <value>&quot;Seth Myers&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[KEY]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2012405379356745748]' derivation='Attribute' name='[attr:Calculation_2012405379356745748:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379327201288]' derivation='None' name='[none:Calculation_2012405379327201288:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2012405379356745748]' derivation='None' name='[none:Calculation_2012405379356745748:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='None' name='[none:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[KEY]' derivation='None' name='[none:KEY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group))]'>
            <groupfilter function='level-members' level='[Comedian (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Comedian (group)]' />
              <groupfilter function='level-members' level='[tmn:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Comedian (group)]' />
              <groupfilter function='level-members' level='[twk:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Comedian (group)]' />
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),WEEK(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),MONTH(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group),YEAR(Date),MONTH(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:KEY:ok]' value='45' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='11' />
            <format attr='text-format' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:DATE:ok]' value='L' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:KEY:ok]' value='false' />
            <format attr='color' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:DATE:ok]' value='#333333' />
            <format attr='font-weight' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:DATE:ok]' value='normal' />
            <format attr='vertical-align' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:DATE:ok]' value='center' />
            <format attr='text-align' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:DATE:ok]' value='center' />
            <format attr='text-align' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]' value='center' />
            <format attr='vertical-align' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]' value='center' />
            <format attr='color' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]' value='#333333' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='solid' />
            <format attr='div-level' scope='rows' value='3' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#1e4371' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379356745748:nk]' />
              <tooltip column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:Calculation_2012405379356745748:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='14'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]&gt; </run>
                <run fontcolor='#666666' fontsize='10'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:DATE:ok]&gt;</run>
                <run fontsize='12'>&#10;&quot;&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:Calculation_2012405379356745748:nk]&gt;&quot;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379356745748:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:DATE:ok] / ([federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)] / [federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:KEY:ok]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Jokes by Comedian (Treemap)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Who mentioned &quot;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;[Parameters].[Parameter 2]&gt;</run>
            <run fontalignment='1' fontcolor='#ffffff'>&quot;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>Æ </run>
            <run fontalignment='1' fontcolor='#ffffff'>the most?</run>
            <run fontalignment='1' fontcolor='#ffffff' fontsize='10'>&#10;Click to filter by comedian</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.0wnexc60n5k6xe1793cbt1uczsw6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Osama&quot;'>
              <calculation class='tableau' formula='&quot;Osama&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wnexc60n5k6xe1793cbt1uczsw6'>
            <column caption='Comedian' datatype='string' name='[COMEDIAN]' role='dimension' type='nominal' />
            <column caption='ZN(SUM([Number of Records]))' datatype='integer' name='[Calculation_2012405379302199296]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='ZN(SUM([Number of Records]))' />
            </column>
            <column caption='S1' datatype='integer' name='[Calculation_2012405379326083074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;)' />
            </column>
            <column caption='S2' datatype='integer' name='[Calculation_2012405379326169091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;,[Calculation_2012405379326083074]+1)' />
            </column>
            <column caption='W1' datatype='string' name='[Calculation_2012405379326509061]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN [Parameters].[Parameter 2] ELSE LEFT([Parameters].[Parameter 2],[Calculation_2012405379326083074]-1) END' />
            </column>
            <column caption='W2' datatype='string' name='[Calculation_2012405379326644230]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN &quot;&quot;&#10;ELSEIF [Calculation_2012405379326083074] != 0 AND [Calculation_2012405379326169091] = 0 THEN &quot;&quot;&#10;ELSE MID([Parameters].[Parameter 2],[Calculation_2012405379326083074]+1,[Calculation_2012405379326169091]-[Calculation_2012405379326083074])&#10;END' />
            </column>
            <column caption='Search' datatype='boolean' name='[Calculation_2012405379327201288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([JOKE],[Calculation_2012405379326509061]) AND CONTAINS([JOKE],[Calculation_2012405379326644230]))' />
            </column>
            <column datatype='string' name='[Comedian (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[COMEDIAN]' new-bin='true'>
                <bin default-name='false' value='&quot;Conan O&apos;Brien&quot;'>
                  <value>&quot;Conan OBrian&quot;</value>
                  <value>&quot;Conan OBrien&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Craig Kilborn&quot;'>
                  <value>&quot;Craig Kilbon&quot;</value>
                  <value>&quot;Craig Kilborn&quot;</value>
                  <value>&quot;Craig Kilburn&quot;</value>
                  <value>&quot;Craig Killborn&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;David Letterman&quot;'>
                  <value>&quot;Dave Letterman&quot;</value>
                  <value>&quot;David Leterman&quot;</value>
                  <value>&quot;David Letterman&quot;</value>
                  <value>&quot;David Letterman (Current Events segment)&quot;</value>
                  <value>&quot;Davie Letterman&quot;</value>
                  <value>&quot;Davis Letterman&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Jay Leno&quot;'>
                  <value>&quot;Jay Leno&quot;</value>
                  <value>&quot;Jay Leno;&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seth Meyers&quot;'>
                  <value>&quot;Seth Meyers&quot;</value>
                  <value>&quot;Seth Myers&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379327201288]' derivation='None' name='[none:Calculation_2012405379327201288:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379302199296]' derivation='User' name='[usr:Calculation_2012405379302199296:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Comedian (group)]' />
              <groupfilter function='member' level='[Comedian (group)]' member='&quot;Darrell Hammond&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379302199296:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='false' />
            <format attr='text-format' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]' value='iLLLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379302199296:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='solid' />
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#1e4371' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379302199296:qk]' />
              <color column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379302199296:qk]' />
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]' />
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379302199296:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='14'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]&gt;</run>
                <run fontcolor='#787878'>Æ </run>
                <run>told</run>
                <run fontcolor='#787878'>Æ </run>
                <run bold='true' fontsize='14'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379302199296:qk]&gt;</run>
                <run bold='true'>Æ </run>
                <run>jokes containing </run>
                <run fontsize='14'>&quot;</run>
                <run bold='true' fontsize='14'>&lt;[Parameters].[Parameter 2]&gt;&quot;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379302199296:qk]&gt;</run>
                <run bold='false'>&#10;&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Statistics on &quot;</run>
            <run bold='true'>&lt;[Parameters].[Parameter 2]&gt;</run>
            <run>&quot;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.0wnexc60n5k6xe1793cbt1uczsw6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Osama&quot;'>
              <calculation class='tableau' formula='&quot;Osama&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wnexc60n5k6xe1793cbt1uczsw6'>
            <column caption='S1' datatype='integer' name='[Calculation_2012405379326083074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;)' />
            </column>
            <column caption='S2' datatype='integer' name='[Calculation_2012405379326169091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;,[Calculation_2012405379326083074]+1)' />
            </column>
            <column caption='W1' datatype='string' name='[Calculation_2012405379326509061]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN [Parameters].[Parameter 2] ELSE LEFT([Parameters].[Parameter 2],[Calculation_2012405379326083074]-1) END' />
            </column>
            <column caption='W2' datatype='string' name='[Calculation_2012405379326644230]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN &quot;&quot;&#10;ELSEIF [Calculation_2012405379326083074] != 0 AND [Calculation_2012405379326169091] = 0 THEN &quot;&quot;&#10;ELSE MID([Parameters].[Parameter 2],[Calculation_2012405379326083074]+1,[Calculation_2012405379326169091]-[Calculation_2012405379326083074])&#10;END' />
            </column>
            <column caption='Search' datatype='boolean' name='[Calculation_2012405379327201288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([JOKE],[Calculation_2012405379326509061]) AND CONTAINS([JOKE],[Calculation_2012405379326644230]))' />
            </column>
            <column caption='Sum ZN Lookup' datatype='integer' name='[Calculation_2012405379352752142]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(LOOKUP(SUM([Number of Records]),0))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='1' datatype='integer' name='[Calculation_3243295452540612610]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='1' datatype='integer' name='[Calculation_3243295452540641283]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Date (Month / Year)]' role='dimension' type='ordinal' user:agg-type='MY' user:base-field='DATE' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='(DATEPART(&apos;year&apos;, [DATE])*100 + DATEPART(&apos;month&apos;, [DATE]))' />
            </column>
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Avg ZN Lookup' datatype='integer' name='[Sum ZN Lookup (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Date (Month / Year)])' />
            </column>
            <column-instance column='[Calculation_3243295452540612610]' derivation='Attribute' name='[attr:Calculation_3243295452540612610:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3243295452540641283]' derivation='Attribute' name='[attr:Calculation_3243295452540641283:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2012405379327201288]' derivation='None' name='[none:Calculation_2012405379327201288:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2012405379352752142]' derivation='User' name='[usr:Calculation_2012405379352752142:qk:17]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Sum ZN Lookup (copy)]' derivation='User' name='[usr:Sum ZN Lookup (copy):qk:2]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:Calculation_3243295452540612610:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk:17]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:Calculation_3243295452540641283:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Sum ZN Lookup (copy):qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:Calculation_3243295452540612610:qk] + [federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:Calculation_3243295452540641283:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Trend line for &quot;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&lt;[Parameters].[Parameter 2]&gt;</run>
            <run fontalignment='1' fontcolor='#ffffff'>&quot;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Edited Jokes - Late Night Only (Edited Jokes - Late Night Only)' name='federated.0wnexc60n5k6xe1793cbt1uczsw6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Osama&quot;'>
              <calculation class='tableau' formula='&quot;Osama&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0wnexc60n5k6xe1793cbt1uczsw6'>
            <column caption='Comedian' datatype='string' name='[COMEDIAN]' role='dimension' type='nominal' />
            <column caption='S1' datatype='integer' name='[Calculation_2012405379326083074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;)' />
            </column>
            <column caption='S2' datatype='integer' name='[Calculation_2012405379326169091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FIND([Parameters].[Parameter 2],&quot; &quot;,[Calculation_2012405379326083074]+1)' />
            </column>
            <column caption='W1' datatype='string' name='[Calculation_2012405379326509061]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN [Parameters].[Parameter 2] ELSE LEFT([Parameters].[Parameter 2],[Calculation_2012405379326083074]-1) END' />
            </column>
            <column caption='W2' datatype='string' name='[Calculation_2012405379326644230]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2012405379326083074] = 0 THEN &quot;&quot;&#10;ELSEIF [Calculation_2012405379326083074] != 0 AND [Calculation_2012405379326169091] = 0 THEN &quot;&quot;&#10;ELSE MID([Parameters].[Parameter 2],[Calculation_2012405379326083074]+1,[Calculation_2012405379326169091]-[Calculation_2012405379326083074])&#10;END' />
            </column>
            <column caption='Search' datatype='boolean' name='[Calculation_2012405379327201288]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='(CONTAINS([JOKE],[Calculation_2012405379326509061]) AND CONTAINS([JOKE],[Calculation_2012405379326644230]))' />
            </column>
            <column caption='Sum ZN Lookup' datatype='integer' name='[Calculation_2012405379352752142]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(LOOKUP(SUM([Number of Records]),0))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Comedian (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[COMEDIAN]' new-bin='true'>
                <bin default-name='false' value='&quot;Conan O&apos;Brien&quot;'>
                  <value>&quot;Conan OBrian&quot;</value>
                  <value>&quot;Conan OBrien&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Craig Kilborn&quot;'>
                  <value>&quot;Craig Kilbon&quot;</value>
                  <value>&quot;Craig Kilborn&quot;</value>
                  <value>&quot;Craig Kilburn&quot;</value>
                  <value>&quot;Craig Killborn&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;David Letterman&quot;'>
                  <value>&quot;Dave Letterman&quot;</value>
                  <value>&quot;David Leterman&quot;</value>
                  <value>&quot;David Letterman&quot;</value>
                  <value>&quot;David Letterman (Current Events segment)&quot;</value>
                  <value>&quot;Davie Letterman&quot;</value>
                  <value>&quot;Davis Letterman&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Jay Leno&quot;'>
                  <value>&quot;Jay Leno&quot;</value>
                  <value>&quot;Jay Leno;&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Seth Meyers&quot;'>
                  <value>&quot;Seth Meyers&quot;</value>
                  <value>&quot;Seth Myers&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Joke' datatype='string' name='[JOKE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[DATE]' derivation='Attribute' name='[attr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379327201288]' derivation='None' name='[none:Calculation_2012405379327201288:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2012405379352752142]' derivation='User' name='[usr:Calculation_2012405379352752142:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group))]'>
            <groupfilter function='level-members' level='[Comedian (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[mn:DATE:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (Comedian (group))]</column>
            <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Action (YEAR(Date),MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]' scope='rows' value='false' />
            <format attr='line-pattern' value='none' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='iyyyy' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]' value='false' />
            <format attr='display' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='false' />
            <format attr='display' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]' value='false' />
            <format attr='text-format' field='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]' value='iyyyy' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='cols' value='1' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#1e4371' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]' />
              <lod column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:DATE:ok]' />
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]' />
              <text column='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]&gt;</run>
                <run> jokes in </run>
                <run bold='true'>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='false'>Peak: </run>
                <run>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]&gt;</run>
                <run bold='false'> jokes in </run>
                <run>&lt;[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379352752142:qk]</rows>
        <cols>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[tmn:DATE:ok]</cols>
        <show-full-range>
          <column>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[DATE]</column>
        </show-full-range>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Jokes'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;</run>
            <run bold='true' fontalignment='1'>Sheet Name</run>
            <run bold='true' fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='background-color' id='dash-text_46' value='#1e4371' />
          <format attr='background-color' id='dash-text_47' value='#1e4371' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_9' value='#00000000' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-weight' value='bold' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='33' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='99622' id='31' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='99622' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='99622' id='22' type='layout-basic' w='99767' x='0' y='0'>
                  <zone h='99622' id='6' param='horz' type='layout-flow' w='66651' x='0' y='0'>
                    <zone fixed-size='635' h='99622' id='4' is-fixed='true' type='layout-basic' w='66651' x='0' y='0'>
                      <zone h='99622' id='41' type='layout-basic' w='66651' x='0' y='0'>
                        <zone h='35505' id='13' param='vert' type='layout-flow' w='66651' x='0' y='0'>
                          <zone h='35499' id='30' name='Frequency by Month (Highlight)' w='66651' x='0' y='0'>
                            <layout-cache cell-count-h='12' non-cell-size-h='78' type-h='cell' type-w='fixed' />
                          </zone>
                        </zone>
                        <zone h='52880' id='42' param='vert' type='layout-flow' w='66651' x='0' y='46742'>
                          <zone h='52880' id='7' name='Jokes (Text)' w='66651' x='0' y='46742'>
                            <layout-cache cell-count-w='1' fixed-size-h='28589' non-cell-size-w='199' type-h='fixed' type-w='cell' />
                          </zone>
                        </zone>
                        <zone fixed-size='82' h='11237' id='24' is-fixed='true' name='Frequency by Year (Sparkline)' w='66651' x='0' y='35505'>
                          <layout-cache minheight='100' type-h='scalable' type-w='cell' />
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone fixed-size='841' h='89329' id='17' is-fixed='true' name='Jokes by Comedian (Treemap)' w='33116' x='66651' y='10293'>
                    <layout-cache type-h='cell' type-w='cell' />
                  </zone>
                  <zone custom-title='true' fixed-size='300' h='3966' id='10' is-fixed='true' mode='type_in' param='[Parameters].[Parameter 2]' show-title='false' type='paramctrl' w='16558' x='83209' y='6327'>
                    <formatted-text>
                      <run fontalignment='1' fontsize='18'>Search for a word</run>
                    </formatted-text>
                  </zone>
                  <zone fixed-size='58' forceUpdate='true' h='6327' id='46' is-fixed='true' type='text' w='33116' x='66651' y='0'>
                    <formatted-text>
                      <run fontalignment='1' fontcolor='#ffffff' fontname='Arial Narrow' fontsize='18'>Your search term is &quot;</run>
                      <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Arial Narrow' fontsize='18'>&lt;[Parameters].[Parameter 2]&gt;</run>
                      <run fontalignment='1' fontcolor='#ffffff' fontname='Arial Narrow' fontsize='18'>&quot;</run>
                      <run fontalignment='1' fontcolor='#ffffff' fontname='Arial Narrow' fontsize='10'>&#10;Type a word or phrase below to search the database</run>
                    </formatted-text>
                  </zone>
                  <zone forceUpdate='true' h='3966' id='47' type='text' w='16558' x='66651' y='6327'>
                    <formatted-text>
                      <run bold='true' fontalignment='2' fontcolor='#ffffff' fontname='Arial Narrow' fontsize='12'>Enter search term here </run>
                      <run bold='true' fontalignment='2' fontcolor='#ffffff' fontname='Arial Narrow' fontsize='16'>→ </run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Jokes'>
      <viewpoints>
        <viewpoint name='Frequency by Month (Highlight)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Frequency by Year (Sparkline)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Jokes (Text)'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Jokes by Comedian (Treemap)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <device-preview selected='Desktop'>
        <device name='Generic Desktop Monitor' type='Desktop' />
        <device name='iPad Mini' type='Tablet' />
      </device-preview>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Frequency by Month (Highlight)'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card AVG='true' KURTOSIS='true' MAX='true' MEDIAN='true' MIN='true' QUART1='true' QUART3='true' SKEWNESS='true' STDEV='true' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[attr:DATE:ok]</field>
            <field>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379324764161:nk]</field>
            <field>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[none:Calculation_2012405379327201288:nk]</field>
            <field>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379339554825:qk]</field>
            <field>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Frequency by Year (Sparkline)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Jokes (Text)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Jokes by Comedian (Treemap)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wnexc60n5k6xe1793cbt1uczsw6].[usr:Calculation_2012405379302199296:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[Comedian (group)]</field>
            <field>[federated.0wnexc60n5k6xe1793cbt1uczsw6].[mn:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Jokes' width='384'>
      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
    </thumbnail>
    <thumbnail height='162' name='Sheet 5' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAACiCAYAAABI1Bo2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE50lEQVR4nO3dv2tddRzH4U8lEpNio6FqolCkJIXYrY0ZxEUcOgT6FwgVOtTJv8Ah0EFB
      3BR0cO1WCoWAq0K1yIVQa9pBsLZQGlMQGyQlGrkOFZsbantDz8lV3s8z5fzgfL/TfeX8uOfu
      6Xa73QIgzhODngAAgyEAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQS
      AIBQAgAQSgAAQg097gE6nU4T8wBglz12AKqqZmdnmzgMALvIJSCAUAIAEEoAAEIJAEAoAQAI
      JQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBA
      KAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAA
      Qg01cZBOp9PEYQDYRc4AAELt6Xa73UFPAoDd99hnAC7/APw/uQQEEEoAAEIJAEAoAQAIJQAA
      oQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABC7UIANmtt
      bb02NtZrbX2z/eEA6MtQmwe//d35+viTxVrZsm7i8Hy9c+p4TQ63OTIAj9LaGcCtLz+v97Z9
      +FdVrSwv1sK7n9a1jbZGBqAfrQRg49oXtXDm24fssVQffHS+1tsYHIC+tBCAzbp49tyjd7u+
      WF85DQAYmOYDsHGtLvzQu+qNU+/XZ599WMcmetd/s3Sj8eEB6E/jAdi4cbWub10xMV/Hj4xX
      1b6af3u+Z9+Vi5drrekJANCXxgNw4/L3PcsTM9M1+vffwy9OV89JwJ1L9ZMbAQAD0fr3AA4c
      3H9/YXh/TY31bn+y7QkA8ECtB+DZp/duWdpbYyNtjwhAP1oPwO/18G///tH2BAB4oIYDsFm3
      V1d3sP9KXbnuNjDAIDQcgD/r7m/NHhGAdjQcgOE6cOj5Hew/Vode2NfsFADoS/P3AHb0ws+R
      Gnmq8RkA0If2Xwfdc5d3c2d9AKA1jQdgs3rf73P1ys37Cxs369K214N6CghgMBoPwEtTMz3L
      K6ur9//rX1utO1s3jhyoydECYAAaD8C+qVd6X/ewfK4u3LqXgK/PLtbdLZvGjr5azzU9AQD6
      0vwvgo1O1dGJqsV/LvXcrTMLp+vq4aql5Z7//+vI7MuNDw9Af1q4CTxar8/PbVu3UkvL238b
      bK7enPEIKMCgtPIU0PjciTo5N/aQPcbqxMJbLv8ADFBLj4EO1dzJ03Xq2PQDtk3XyYXT9Zpf
      hQcYqD3dbrf7OAfodDo1Ozv7r9s3frlVP/78672FoWfq4PRk+egHGLzmbwJvMzw+WTPjk20P
      A8AOtf9NYAD+kwQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBK
      AABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQ
      AgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACE
      EgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAg
      lAAAhBIAgFACABBKAABC/QWcMaI3SXwYYQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 6' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
